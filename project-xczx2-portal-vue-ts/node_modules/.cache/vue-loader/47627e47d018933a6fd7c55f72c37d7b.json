{"remainingRequest":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\src\\module-entering\\pages\\entering\\components\\common-entering-step2-upload-image.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\src\\module-entering\\pages\\entering\\components\\common-entering-step2-upload-image.vue","mtime":1662991078009},{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660903053592},{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660903053930},{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\postcss-loader\\src\\index.js","mtime":1576202027988},{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660903055666},{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2022\\xc_edu3.0\\code_0\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmRpc2FibGVkIC5lbC11cGxvYWQtLXBpY3R1cmUtY2FyZCB7DQogIGRpc3BsYXk6IG5vbmU7DQp9DQo="},{"version":3,"sources":["common-entering-step2-upload-image.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA","file":"common-entering-step2-upload-image.vue","sourceRoot":"src/module-entering/pages/entering/components","sourcesContent":["<template>\r\n  <div>\r\n    <el-upload\r\n      action\r\n      list-type=\"picture-card\"\r\n      accept=\".jpg, .png, .bmp\"\r\n      :file-list=\"fileList\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n      :on-success=\"handleUploadSuccess\"\r\n      :on-error=\"handleUploadError\"\r\n      action=\"/api/media/upload/coursepic\"\r\n      name=\"filedata\"\r\n      :on-preview=\"handleOnPreview\"\r\n      :on-remove=\"handleOnRemove\"\r\n      :class=\"{disabled:uploadDisabled}\"\r\n    >\r\n      <i class=\"el-icon-plus\"></i>\r\n      <div class=\"el-upload__tip\" slot=\"tip\" style=\"line-height: 20px;\">\r\n        <slot></slot>\r\n        <br />文件小于2M\r\n        <br />支持JPG/PNG/BMP等格式图片\r\n      </div>\r\n    </el-upload>\r\n    <el-dialog :visible.sync=\"dialogVisible\">\r\n      <img width=\"100%\" :src=\"syncedImageUrl\" alt />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue, PropSync, Watch } from 'vue-property-decorator'\r\nimport {\r\n  ElUploadInternalRawFile,\r\n  ElUploadInternalFileDetail,\r\n  HttpRequestOptions\r\n} from 'element-ui/types/upload'\r\nimport * as qiniu from 'qiniu-js'\r\nimport { IQnParamsDTO } from '@/entity/media-page-list'\r\nimport { getQnParams } from '@/api/common'\r\n\r\n@Component\r\nexport default class CommonEnteringStep2UploadImage extends Vue {\r\n  private dialogVisible: boolean = false\r\n\r\n  @PropSync('imageUrl', { type: String, required: false, default: '' })\r\n  syncedImageUrl!: string\r\n\r\n  @Watch('syncedImageUrl')\r\n  onImageUrlChanged(newImageUrl: string, oldImageUrl: string) {\r\n    // console.log('--------------onImageUrlChanged前--------------')\r\n    // console.log(this.fileList)\r\n    if (newImageUrl) {\r\n      this.fileList = [{ url: newImageUrl }]\r\n    } else {\r\n      this.fileList = []\r\n    }\r\n    //解决回退到上一页路径前缀消失问题\r\n    // if(this.syncedImageUrl.length>0 && this.syncedImageUrl.indexOf(`${process.env.VUE_APP_SERVER_PICSERVER_URL}`)<0){\r\n      \r\n    //   this.syncedImageUrl = `${process.env.VUE_APP_SERVER_PICSERVER_URL}`+this.syncedImageUrl;\r\n    //   alert(this.syncedImageUrl)\r\n    // }\r\n    // console.log('--------------onImageUrlChanged后--------------')\r\n    // console.log(this.fileList)\r\n  }\r\n\r\n  private fileList: any[] = []\r\n\r\n  // computed\r\n  get uploadDisabled() {\r\n    return this.fileList.length > 0\r\n  }\r\n\r\n  /**\r\n   * 上传文件之前的钩子\r\n   * TODO: 增加其他文件格式\r\n   */\r\n  private handleBeforeUpload(file: ElUploadInternalRawFile) {\r\n    const isJPG =\r\n      file.type === 'image/jpeg' ||\r\n      file.type === 'image/png' ||\r\n      file.type === 'image/bmp'\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n    if (!isJPG) {\r\n      this.$message.error('上传头像图片只能是 JPG/PNG/BMP 格式!')\r\n    }\r\n    if (!isLt2M) {\r\n      this.$message.error('上传头像图片大小不能超过 2MB!')\r\n    }\r\n    return isJPG && isLt2M\r\n  }\r\n  /**\r\n   * 上传成功钩子\r\n   */\r\n  private handleUploadSuccess(res,file){\r\n\r\n      this.syncedImageUrl = `${process.env.VUE_APP_SERVER_PICSERVER_URL}`+res.url\r\n      console.log(res+res.url)\r\n      // if(res.code==1){\r\n      //   this.$message.error(res.msg)\r\n      // }\r\n  }\r\n  /**\r\n   * 文件上传失败钩子\r\n   */\r\n\r\n  private handleUploadError(err){\r\n    console.log('上传失败:'+err.errMessage)\r\n  }\r\n  /**\r\n   * 覆盖默认的上传行为\r\n   */\r\n  private handleHttpRequest(options: HttpRequestOptions) {\r\n    let file = options.file\r\n    let filename = file.name\r\n    let index = filename.lastIndexOf('.')\r\n    let suffix = filename.substr(index)\r\n\r\n    // 文档上传到七牛云\r\n    this.qiniuyunUpload(file)\r\n  }\r\n\r\n  /**\r\n   * 文档上传到七牛云\r\n   * TODO: 异常系考虑 401\r\n   * TODO: 后端提供公开资源接口\r\n   */\r\n  private async qiniuyunUpload(file: ElUploadInternalFileDetail) {\r\n    // 准备工作\r\n    let qnParams: IQnParamsDTO = await getQnParams()\r\n\r\n    // 开始上传\r\n    let token = qnParams.qnToken\r\n    let config = {\r\n      useCdnDomain: true,\r\n      region: null // 自动分析上传域名区域\r\n    }\r\n    let putExtra = {\r\n      fname: '',\r\n      params: {},\r\n      mimeType: null\r\n    }\r\n    let key = qnParams.key\r\n\r\n    let next = response => {\r\n      let total = response.total\r\n      let percentage = Math.ceil(total.percent)\r\n      console.log(`媒资上传到七牛云进度...${percentage}%`)\r\n      console.log(response)\r\n    }\r\n    let error = response => {\r\n      console.log('媒资上传到七牛云失败...')\r\n      console.log(response)\r\n    }\r\n    let complete = response => {\r\n      this.syncedImageUrl = `http://${qnParams.domain}/${qnParams.key}`\r\n      console.log('媒资上传到七牛云完成...')\r\n      console.log(response)\r\n    }\r\n\r\n    let subscription\r\n    // 调用sdk上传接口获得相应的observable，控制上传和暂停\r\n    let observable = qiniu.upload(file, key, token, putExtra, config)\r\n    observable.subscribe(next, error, complete)\r\n    console.log('媒资上传到七牛云开始...')\r\n  }\r\n\r\n  /**\r\n   * 点击文件列表中已上传的文件时的钩子\r\n   */\r\n  private handleOnPreview(file: ElUploadInternalFileDetail) {\r\n    this.dialogVisible = true\r\n  }\r\n\r\n  /**\r\n   * 文件列表移除文件时的钩子\r\n   */\r\n  private handleOnRemove(\r\n    file: ElUploadInternalFileDetail,\r\n    fileList: ElUploadInternalFileDetail[]\r\n  ) {\r\n    this.syncedImageUrl = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.disabled .el-upload--picture-card {\r\n  display: none;\r\n}\r\n</style>"]}]}