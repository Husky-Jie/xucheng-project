{"remainingRequest":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\babel-loader\\lib\\index.js!D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\forget-password\\components\\change-password-step1-verify-phone.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\forget-password\\components\\change-password-step1-verify-phone.vue","mtime":1586849107733},{"path":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":1576202003988},{"path":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\ts-loader\\index.js","mtime":1660903053026},{"path":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\itcast2022\\xc_edu3.0\\code_148\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\forget-password\\components\\change-password-step1-verify-phone.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { Form as ElForm } from 'element-ui'\r\nimport { smsMsg } from '@/api/common'\r\nimport { verify } from '@/api/learning-user'\r\n\r\nconst TIME_COUNT = 90\r\n@Component\r\nexport default class ChangePasswordStep1VerifyPhone extends Vue {\r\n  // 验证码\r\n  private isSending: boolean = false\r\n  private sendTimer: number = 0\r\n  private sendCount: number = 0\r\n  // 表单数据\r\n  private form: any = {\r\n    phone: '',\r\n    verifyCode: '',\r\n    verifyKey: ''\r\n  }\r\n  // 手机号正则，参考：http://caibaojian.com/phone-regexp.html\r\n  private validatePhone = (rule: any, value: any, callback: any) => {\r\n    if (!/^1[0-9]{10}$/.test(value)) {\r\n      callback(new Error('请输入正确的手机号'))\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  // 表单验证\r\n  private rules: any = {\r\n    phone: [\r\n      { required: true, message: '请填写手机号', trigger: 'change' },\r\n      { validator: this.validatePhone, trigger: 'change' }\r\n    ],\r\n    verifyCode: [{ required: true, message: '请填写验证码', trigger: 'change' }]\r\n  }\r\n  // computed\r\n  get buttonTips() {\r\n    if (!this.isSending) {\r\n      return '获取验证码'\r\n    }\r\n    return `${this.sendCount}s`\r\n  }\r\n\r\n  /**\r\n   * 发送短信验证码\r\n   */\r\n  private async smsMsg() {\r\n    let form = this.$refs['form'] as ElForm\r\n    form.validateField('phone', async (errorMessage: string) => {\r\n      if (errorMessage) {\r\n        return\r\n      }\r\n      this.isSending = true\r\n      this.sendCount = TIME_COUNT\r\n      this.form.verifyKey = await smsMsg(this.form.phone)\r\n\r\n      this.sendTimer = setInterval(() => {\r\n        if (this.sendCount > 0) {\r\n          this.sendCount--\r\n        } else {\r\n          clearInterval(this.sendTimer)\r\n          this.isSending = false\r\n        }\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 验证短信验证码\r\n   */\r\n  public async verify(): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      let form = this.$refs['form'] as ElForm\r\n      form.validate(async (isValid: boolean) => {\r\n        if (isValid) {\r\n          let verifyToken: string = await verify(this.form)\r\n          this.$emit('formInfo', {\r\n            phone: this.form.phone,\r\n            verifyToken: verifyToken\r\n          })\r\n          resolve()\r\n        } else {\r\n          reject()\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n"],"sourceRoot":""}]}