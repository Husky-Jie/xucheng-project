{"remainingRequest":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\babel-loader\\lib\\index.js!E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\src\\module-organization\\pages\\media-manage\\components\\upload-bigfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\src\\module-organization\\pages\\media-manage\\components\\upload-bigfile.vue","mtime":1661399971175},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":1576202003988},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAkIGZyb20gIi4uLy4uLy4uLy4uLy4uL3N0YXRpYy9wbHVnaW5zL2pxdWVyeS9kaXN0L2pxdWVyeS5qcyI7CmltcG9ydCB3ZWJ1cGxvYWRlciBmcm9tICIuLi8uLi8uLi8uLi8uLi9zdGF0aWMvcGx1Z2lucy93ZWJ1cGxvYWRlci9kaXN0L3dlYnVwbG9hZGVyLmpzIjsKaW1wb3J0ICIuLi8uLi8uLi8uLi8uLi9zdGF0aWMvY3NzL3dlYnVwbG9hZGVyL3dlYnVwbG9hZGVyLmNzcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXBsb2FkZXI6IHt9LAogICAgICB1cGxvYWRGaWxlOiB7fSwKICAgICAgcGVyY2VudGFnZTogMCwKICAgICAgZmlsZU1kNTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+W8gOWni+S4iuS8oAogICAgdXBsb2FkOiBmdW5jdGlvbiB1cGxvYWQoKSB7CiAgICAgIGlmICh0aGlzLnVwbG9hZEZpbGUgJiYgdGhpcy51cGxvYWRGaWxlLmlkKSB7CiAgICAgICAgdGhpcy51cGxvYWRlci51cGxvYWQodGhpcy51cGxvYWRGaWxlLmlkKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhbGVydCgi6K+36YCJ5oup5paH5Lu2Iik7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyAgICAgIHZhciBmaWxlTWQ1OwogICAgLy8gICAgICB2YXIgdXBsb2FkRmlsZTsKICAgIFdlYlVwbG9hZGVyLlVwbG9hZGVyLnJlZ2lzdGVyKHsKICAgICAgImJlZm9yZS1zZW5kLWZpbGUiOiAiYmVmb3JlU2VuZEZpbGUiLAogICAgICAiYmVmb3JlLXNlbmQiOiAiYmVmb3JlU2VuZCIsCiAgICAgICJhZnRlci1zZW5kLWZpbGUiOiAiYWZ0ZXJTZW5kRmlsZSIKICAgIH0sIHsKICAgICAgYmVmb3JlU2VuZEZpbGU6IGZ1bmN0aW9uIChmaWxlKSB7CiAgICAgICAgLy8g5Yib5bu65LiA5LiqZGVmZmVyZWQs55So5LqO6YCa55+l5piv5ZCm5a6M5oiQ5pON5L2cCiAgICAgICAgdmFyIGRlZmVycmVkID0gV2ViVXBsb2FkZXIuRGVmZXJyZWQoKTsgLy8g6K6h566X5paH5Lu255qE5ZSv5LiA5qCH6K+G77yM55So5LqO5pat54K557ut5LygCgogICAgICAgIG5ldyBXZWJVcGxvYWRlci5VcGxvYWRlcigpLm1kNUZpbGUoZmlsZSwgMCwgMTAwICogMTAyNCAqIDEwMjQpLnRoZW4oZnVuY3Rpb24gKHZhbCkgewogICAgICAgICAgdGhpcy5maWxlTWQ1ID0gdmFsOwogICAgICAgICAgdGhpcy51cGxvYWRGaWxlID0gZmlsZTsgLy9hbGVydChmaWxlTWQ1ICkKICAgICAgICAgIC8v5ZCR5pyN5Yqh56uv6K+35rGC5rOo5YaM5LiK5Lyg5paH5Lu2CgogICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdHlwZTogIlBPU1QiLAogICAgICAgICAgICB1cmw6ICIvYXBpL21lZGlhL3VwbG9hZC9yZWdpc3RlciIsCiAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAvLyDmlofku7bllK/kuIDooajnpLoKICAgICAgICAgICAgICBmaWxlTWQ1OiB0aGlzLmZpbGVNZDUsCiAgICAgICAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZSwKICAgICAgICAgICAgICBmaWxlU2l6ZTogZmlsZS5zaXplLAogICAgICAgICAgICAgIG1pbWV0eXBlOiBmaWxlLnR5cGUsCiAgICAgICAgICAgICAgZmlsZUV4dDogZmlsZS5leHQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YVR5cGU6ICJqc29uIiwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gc3VjY2VzcyhyZXNwb25zZSkgewogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAvL2FsZXJ0KCfkuIrkvKDmlofku7bms6jlhozmiJDlip/lvIDlp4vkuIrkvKAnKTsKICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgYWxlcnQocmVzcG9uc2UubWVzc2FnZSk7CiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0uYmluZCh0aGlzKSk7CiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTsKICAgICAgfS5iaW5kKHRoaXMpLAogICAgICBiZWZvcmVTZW5kOiBmdW5jdGlvbiAoYmxvY2spIHsKICAgICAgICB2YXIgZGVmZXJyZWQgPSBXZWJVcGxvYWRlci5EZWZlcnJlZCgpOyAvLyDmr4/mrKHkuIrkvKDliIblnZfliY3moKHpqozliIblnZfvvIzlpoLmnpzlt7LlrZjlnKjliIblnZfliJnkuI3lho3kuIrkvKDvvIzovr7liLDmlq3ngrnnu63kvKDnmoTnm67nmoQKCiAgICAgICAgJC5hamF4KHsKICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgIHVybDogIi9hcGkvbWVkaWEvdXBsb2FkL2NoZWNrY2h1bmsiLAogICAgICAgICAgZGF0YTogewogICAgICAgICAgICAvLyDmlofku7bllK/kuIDooajnpLoKICAgICAgICAgICAgZmlsZU1kNTogdGhpcy5maWxlTWQ1LAogICAgICAgICAgICAvLyDlvZPliY3liIblnZfkuIvmoIcKICAgICAgICAgICAgY2h1bms6IGJsb2NrLmNodW5rLAogICAgICAgICAgICAvLyDlvZPliY3liIblnZflpKflsI8KICAgICAgICAgICAgY2h1bmtTaXplOiBibG9jay5lbmQgLSBibG9jay5zdGFydAogICAgICAgICAgfSwKICAgICAgICAgIGRhdGFUeXBlOiAianNvbiIsCiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGlmIChyZXNwb25zZS5pZkV4aXN0KSB7CiAgICAgICAgICAgICAgLy8g5YiG5Z2X5a2Y5Zyo77yM6Lez6L+H6K+l5YiG5Z2XCiAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8g5YiG5Z2X5LiN5a2Y5Zyo5oiW5LiN5a6M5pW077yM6YeN5paw5Y+R6YCBCiAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSk7IC8v5p6E5bu6ZmlsZU1kNeWPguaVsO+8jOS4iuS8oOWIhuWdl+aXtuW4puS4imZpbGVNZDUKCiAgICAgICAgdGhpcy51cGxvYWRlci5vcHRpb25zLmZvcm1EYXRhLmZpbGVNZDUgPSB0aGlzLmZpbGVNZDU7CiAgICAgICAgdGhpcy51cGxvYWRlci5vcHRpb25zLmZvcm1EYXRhLmNodW5rID0gYmxvY2suY2h1bms7CiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTsKICAgICAgfS5iaW5kKHRoaXMpLAogICAgICBhZnRlclNlbmRGaWxlOiBmdW5jdGlvbiAoZmlsZSkgewogICAgICAgIC8vIOWQiOW5tuWIhuWdlwogICAgICAgICQuYWpheCh7CiAgICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgICB1cmw6ICIvYXBpL21lZGlhL3VwbG9hZC9tZXJnZWNodW5rcyIsCiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIGZpbGVNZDU6IHRoaXMuZmlsZU1kNSwKICAgICAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZSwKICAgICAgICAgICAgZmlsZVNpemU6IGZpbGUuc2l6ZSwKICAgICAgICAgICAgbWltZXR5cGU6IGZpbGUudHlwZSwKICAgICAgICAgICAgZmlsZUV4dDogZmlsZS5leHQKICAgICAgICAgIH0sCiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKHJlc3BvbnNlKSB7fQogICAgICAgIH0pOwogICAgICB9LmJpbmQodGhpcykKICAgIH0pOyAvLyDliJvlu7p1cGxvYWRlcuWvueixoe+8jOmFjee9ruWPguaVsAoKICAgIHRoaXMudXBsb2FkZXIgPSBXZWJVcGxvYWRlci5jcmVhdGUoewogICAgICBzd2Y6ICIvc3RhdGljL3BsdWdpbnMvd2VidXBsb2FkZXIvZGlzdC9VcGxvYWRlci5zd2YiLAogICAgICAvL+S4iuS8oOaWh+S7tueahGZsYXNo5paH5Lu277yM5rWP6KeI5Zmo5LiN5pSv5oyBaDXml7blkK/liqhmbGFzaAogICAgICBzZXJ2ZXI6ICIvYXBpL21lZGlhL3VwbG9hZC91cGxvYWRjaHVuayIsCiAgICAgIC8v5LiK5Lyg5YiG5Z2X55qE5pyN5Yqh56uv5Zyw5Z2A77yM5rOo5oSP6Leo5Z+f6Zeu6aKYCiAgICAgIGZpbGVWYWw6ICJmaWxlIiwKICAgICAgLy/mlofku7bkuIrkvKDln5/nmoRuYW1lCiAgICAgIHBpY2s6ICIjcGlja2VyIiwKICAgICAgLy/mjIflrprpgInmi6nmlofku7bnmoTmjInpkq7lrrnlmagKICAgICAgYXV0bzogZmFsc2UsCiAgICAgIC8v5omL5Yqo6Kem5Y+R5LiK5LygCiAgICAgIGRpc2FibGVHbG9iYWxEbmQ6IHRydWUsCiAgICAgIC8v56aB5o6J5pW05Liq6aG16Z2i55qE5ouW5ou95Yqf6IO9CiAgICAgIGNodW5rZWQ6IHRydWUsCiAgICAgIC8vIOaYr+WQpuWIhuWdl+S4iuS8oAogICAgICBjaHVua1NpemU6IDEgKiAxMDI0ICogMTAyNCwKICAgICAgLy8g5YiG5Z2X5aSn5bCP77yI6buY6K6kNU3vvIkKICAgICAgdGhyZWFkczogMywKICAgICAgLy8g5byA5ZCv5aSa5Liq57q/56iL77yI6buY6K6kM+S4qu+8iQogICAgICBwcmVwYXJlTmV4dEZpbGU6IHRydWUgLy8g5YWB6K645Zyo5paH5Lu25Lyg6L6T5pe25o+Q5YmN5oqK5LiL5LiA5Liq5paH5Lu25YeG5aSH5aW9CgogICAgfSk7IC8vIOWwhuaWh+S7tua3u+WKoOWIsOmYn+WIlwoKICAgIHRoaXMudXBsb2FkZXIub24oImZpbGVRdWV1ZWQiLCBmdW5jdGlvbiAoZmlsZSkgewogICAgICB0aGlzLnVwbG9hZEZpbGUgPSBmaWxlOwogICAgICB0aGlzLnBlcmNlbnRhZ2UgPSAwOwogICAgfS5iaW5kKHRoaXMpKTsgLy/pgInmi6nmlofku7blkI7op6blj5EKCiAgICB0aGlzLnVwbG9hZGVyLm9uKCJiZWZvcmVGaWxlUXVldWVkIiwgZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgLy8gICAgIHRoaXMudXBsb2FkZXIucmVtb3ZlRmlsZShmaWxlKQogICAgICAvL+mHjee9rnVwbG9hZGVyCiAgICAgIHRoaXMudXBsb2FkZXIucmVzZXQoKTsKICAgICAgdGhpcy5wZXJjZW50YWdlID0gMDsKICAgIH0uYmluZCh0aGlzKSk7IC8vIOebkeaOp+S4iuS8oOi/m+W6pgogICAgLy8gcGVyY2VudGFnZTrku6PooajkuIrkvKDmlofku7bnmoTnmb7liIbmr5QKCiAgICB0aGlzLnVwbG9hZGVyLm9uKCJ1cGxvYWRQcm9ncmVzcyIsIGZ1bmN0aW9uIChmaWxlLCBwZXJjZW50YWdlKSB7CiAgICAgIHRoaXMucGVyY2VudGFnZSA9IE1hdGguY2VpbChwZXJjZW50YWdlICogMTAwKTsKICAgIH0uYmluZCh0aGlzKSk7IC8v5LiK5Lyg5aSx6LSl6Kem5Y+RCgogICAgdGhpcy51cGxvYWRlci5vbigidXBsb2FkRXJyb3IiLCBmdW5jdGlvbiAoZmlsZSwgcmVhc29uKSB7CiAgICAgIGNvbnNvbGUubG9nKHJlYXNvbik7CiAgICAgIGFsZXJ0KCLkuIrkvKDmlofku7blpLHotKUiKTsKICAgIH0pOyAvL+S4iuS8oOaIkOWKn+inpuWPkQoKICAgIHRoaXMudXBsb2FkZXIub24oInVwbG9hZFN1Y2Nlc3MiLCBmdW5jdGlvbiAoZmlsZSwgcmVzcG9uc2UpIHsKICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICBhbGVydCgi5LiK5Lyg5paH5Lu25oiQ5Yqf77yBIik7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["upload-bigfile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div><br/>\n  操作步骤：<br/>\n  1、点击“选择文件”，选择要上传的文件<br/>\n  2、点击“开始上传”，开始上传文件<br/>\n  3、如需重新上传请重复上边的步骤。<br/><br/>\n\n  <div id=\"uploader\" class=\"wu-example\">\n    <div class=\"btns\" style=\"float:left;padding-right: 20px\">\n      <div id=\"picker\">选择文件</div>\n    </div>\n    <div id=\"ctlBtn\" class=\"webuploader-pick\" @click=\"upload()\">开始上传</div>\n\n  </div>\n  <!--用来存放文件信息-->\n  <div id=\"thelist\" class=\"uploader-list\" >\n    <div v-if=\"uploadFile.id\" :id='uploadFile.id'><span>{{uploadFile.name}}</span>&nbsp;<span class='percentage'>{{percentage}}%</span></div>\n\n  </div>\n</div>\n</template>\n<script>\n  import $ from '../../../../../static/plugins/jquery/dist/jquery.js'\n  import webuploader from '../../../../../static/plugins/webuploader/dist/webuploader.js'\n  import '../../../../../static/css/webuploader/webuploader.css'\n  export default{\n    data(){\n      return{\n        uploader:{},\n        uploadFile:{},\n        percentage:0,\n        fileMd5:''\n      }\n    },\n    methods:{\n      //开始上传\n      upload(){\n        if(this.uploadFile && this.uploadFile.id){\n          this.uploader.upload(this.uploadFile.id);\n        }else{\n          alert(\"请选择文件\");\n        }\n      }\n    },\n    mounted(){\n//      var fileMd5;\n//      var uploadFile;\n      WebUploader.Uploader.register({\n          \"before-send-file\":\"beforeSendFile\",\n          \"before-send\":\"beforeSend\",\n          \"after-send-file\":\"afterSendFile\"\n        },{\n          beforeSendFile:function(file) {\n            // 创建一个deffered,用于通知是否完成操作\n            var deferred = WebUploader.Deferred();\n            // 计算文件的唯一标识，用于断点续传\n            (new WebUploader.Uploader()).md5File(file, 0, 100*1024*1024)\n              .then(function(val) {\n\n                this.fileMd5 = val;\n                this.uploadFile = file;\n                //alert(fileMd5 )\n                //向服务端请求注册上传文件\n                $.ajax(\n                  {\n                    type:\"POST\",\n                    url:\"/api/media/upload/register\",\n                    data:{\n                      // 文件唯一表示\n                      fileMd5:this.fileMd5,\n                      fileName: file.name,\n                      fileSize:file.size,\n                      mimetype:file.type,\n                      fileExt:file.ext\n                    },\n                    dataType:\"json\",\n                    success:function(response) {\n                      if(response.success) {\n                        //alert('上传文件注册成功开始上传');\n                        deferred.resolve();\n                      } else {\n                        alert(response.message);\n                        deferred.reject();\n                      }\n                    }\n                  }\n                );\n              }.bind(this));\n\n            return deferred.promise();\n          }.bind(this),\n          beforeSend:function(block) {\n            var deferred = WebUploader.Deferred();\n            // 每次上传分块前校验分块，如果已存在分块则不再上传，达到断点续传的目的\n            $.ajax(\n              {\n                type:\"POST\",\n                url:\"/api/media/upload/checkchunk\",\n                data:{\n                  // 文件唯一表示\n                  fileMd5:this.fileMd5,\n                  // 当前分块下标\n                  chunk:block.chunk,\n                  // 当前分块大小\n                  chunkSize:block.end-block.start\n                },\n                dataType:\"json\",\n                success:function(response) {\n                  if(response.ifExist) {\n                    // 分块存在，跳过该分块\n                    deferred.reject();\n                  } else {\n                    // 分块不存在或不完整，重新发送\n                    deferred.resolve();\n                  }\n                }\n              }\n            );\n            //构建fileMd5参数，上传分块时带上fileMd5\n            this.uploader.options.formData.fileMd5 = this.fileMd5;\n            this.uploader.options.formData.chunk = block.chunk;\n            return deferred.promise();\n          }.bind(this),\n          afterSendFile:function(file) {\n            // 合并分块\n            $.ajax(\n              {\n                type:\"POST\",\n                url:\"/api/media/upload/mergechunks\",\n                data:{\n                  fileMd5:this.fileMd5,\n                  fileName: file.name,\n                  fileSize:file.size,\n                  mimetype:file.type,\n                  fileExt:file.ext\n                },\n                success:function(response){\n\n                }\n              }\n            );\n          }.bind(this)\n        }\n      );\n      // 创建uploader对象，配置参数\n      this.uploader = WebUploader.create(\n        {\n          swf:\"/static/plugins/webuploader/dist/Uploader.swf\",//上传文件的flash文件，浏览器不支持h5时启动flash\n          server:\"/api/media/upload/uploadchunk\",//上传分块的服务端地址，注意跨域问题\n          fileVal:\"file\",//文件上传域的name\n          pick:\"#picker\",//指定选择文件的按钮容器\n          auto:false,//手动触发上传\n          disableGlobalDnd:true,//禁掉整个页面的拖拽功能\n          chunked:true,// 是否分块上传\n          chunkSize:1*1024*1024, // 分块大小（默认5M）\n          threads:3, // 开启多个线程（默认3个）\n          prepareNextFile:true// 允许在文件传输时提前把下一个文件准备好\n        }\n      );\n\n      // 将文件添加到队列\n      this.uploader.on(\"fileQueued\", function(file) {\n          this.uploadFile = file;\n          this.percentage = 0;\n\n        }.bind(this)\n      );\n      //选择文件后触发\n      this.uploader.on(\"beforeFileQueued\", function(file) {\n//     this.uploader.removeFile(file)\n        //重置uploader\n        this.uploader.reset()\n        this.percentage = 0;\n      }.bind(this));\n\n      // 监控上传进度\n      // percentage:代表上传文件的百分比\n      this.uploader.on(\"uploadProgress\", function(file, percentage) {\n          this.percentage = Math.ceil(percentage * 100);\n      }.bind(this));\n      //上传失败触发\n      this.uploader.on(\"uploadError\", function(file,reason) {\n        console.log(reason)\n        alert(\"上传文件失败\");\n      });\n      //上传成功触发\n      this.uploader.on(\"uploadSuccess\", function(file,response ) {\n        console.log(response)\n        alert(\"上传文件成功！\");\n      });\n\n    }\n  }\n\n</script>\n<style scoped>\n\n\n</style>\n"],"sourceRoot":"src/module-organization/pages/media-manage/components"}]}