{"remainingRequest":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\src\\module-entering\\pages\\entering\\components\\company-entering-step2-submit-information.vue?vue&type=template&id=31e4d765&scoped=true&","dependencies":[{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\src\\module-entering\\pages\\entering\\components\\company-entering-step2-submit-information.vue","mtime":1586849107720},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1660903053930},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}