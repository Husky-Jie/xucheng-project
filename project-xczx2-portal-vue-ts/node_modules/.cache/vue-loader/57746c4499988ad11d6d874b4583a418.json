{"remainingRequest":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\src\\module-entering\\pages\\entering\\components\\common-entering-step2-upload-image.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\src\\module-entering\\pages\\entering\\components\\common-entering-step2-upload-image.vue","mtime":1663679475348},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":1576202003988},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\ts-loader\\index.js","mtime":1660903053026},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBQcm9wU3luYywgV2F0Y2ggfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJw0KaW1wb3J0IHsNCiAgRWxVcGxvYWRJbnRlcm5hbFJhd0ZpbGUsDQogIEVsVXBsb2FkSW50ZXJuYWxGaWxlRGV0YWlsLA0KICBIdHRwUmVxdWVzdE9wdGlvbnMNCn0gZnJvbSAnZWxlbWVudC11aS90eXBlcy91cGxvYWQnDQppbXBvcnQgKiBhcyBxaW5pdSBmcm9tICdxaW5pdS1qcycNCmltcG9ydCB7IElRblBhcmFtc0RUTyB9IGZyb20gJ0AvZW50aXR5L21lZGlhLXBhZ2UtbGlzdCcNCmltcG9ydCB7IGdldFFuUGFyYW1zIH0gZnJvbSAnQC9hcGkvY29tbW9uJw0KDQpAQ29tcG9uZW50DQpleHBvcnQgZGVmYXVsdCBjbGFzcyBDb21tb25FbnRlcmluZ1N0ZXAyVXBsb2FkSW1hZ2UgZXh0ZW5kcyBWdWUgew0KICBwcml2YXRlIGRpYWxvZ1Zpc2libGU6IGJvb2xlYW4gPSBmYWxzZQ0KDQogIEBQcm9wU3luYygnaW1hZ2VVcmwnLCB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IGZhbHNlLCBkZWZhdWx0OiAnJyB9KQ0KICBzeW5jZWRJbWFnZVVybCE6IHN0cmluZw0KDQogIEBXYXRjaCgnc3luY2VkSW1hZ2VVcmwnKQ0KICBvbkltYWdlVXJsQ2hhbmdlZChuZXdJbWFnZVVybDogc3RyaW5nLCBvbGRJbWFnZVVybDogc3RyaW5nKSB7DQogICAgLy8gY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tb25JbWFnZVVybENoYW5nZWTliY0tLS0tLS0tLS0tLS0tLScpDQogICAgLy8gY29uc29sZS5sb2codGhpcy5maWxlTGlzdCkNCiAgICBpZiAobmV3SW1hZ2VVcmwpIHsNCiAgICAgIHRoaXMuZmlsZUxpc3QgPSBbeyB1cmw6IG5ld0ltYWdlVXJsIH1dDQogICAgfSBlbHNlIHsNCiAgICAgIHRoaXMuZmlsZUxpc3QgPSBbXQ0KICAgIH0NCiAgICAvL+ino+WGs+WbnumAgOWIsOS4iuS4gOmhtei3r+W+hOWJjee8gOa2iOWksemXrumimA0KICAgIC8vIGlmKHRoaXMuc3luY2VkSW1hZ2VVcmwubGVuZ3RoPjAgJiYgdGhpcy5zeW5jZWRJbWFnZVVybC5pbmRleE9mKGAke3Byb2Nlc3MuZW52LlZVRV9BUFBfU0VSVkVSX1BJQ1NFUlZFUl9VUkx9YCk8MCl7DQogICAgICANCiAgICAvLyAgIHRoaXMuc3luY2VkSW1hZ2VVcmwgPSBgJHtwcm9jZXNzLmVudi5WVUVfQVBQX1NFUlZFUl9QSUNTRVJWRVJfVVJMfWArdGhpcy5zeW5jZWRJbWFnZVVybDsNCiAgICAvLyAgIGFsZXJ0KHRoaXMuc3luY2VkSW1hZ2VVcmwpDQogICAgLy8gfQ0KICAgIC8vIGNvbnNvbGUubG9nKCctLS0tLS0tLS0tLS0tLW9uSW1hZ2VVcmxDaGFuZ2Vk5ZCOLS0tLS0tLS0tLS0tLS0nKQ0KICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuZmlsZUxpc3QpDQogIH0NCg0KICBwcml2YXRlIGZpbGVMaXN0OiBhbnlbXSA9IFtdDQoNCiAgLy8gY29tcHV0ZWQNCiAgZ2V0IHVwbG9hZERpc2FibGVkKCkgew0KICAgIHJldHVybiB0aGlzLmZpbGVMaXN0Lmxlbmd0aCA+IDANCiAgfQ0KDQogIC8qKg0KICAgKiDkuIrkvKDmlofku7bkuYvliY3nmoTpkqnlrZANCiAgICogVE9ETzog5aKe5Yqg5YW25LuW5paH5Lu25qC85byPDQogICAqLw0KICBwcml2YXRlIGhhbmRsZUJlZm9yZVVwbG9hZChmaWxlOiBFbFVwbG9hZEludGVybmFsUmF3RmlsZSkgew0KICAgIGNvbnN0IGlzSlBHID0NCiAgICAgIGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnIHx8DQogICAgICBmaWxlLnR5cGUgPT09ICdpbWFnZS9wbmcnIHx8DQogICAgICBmaWxlLnR5cGUgPT09ICdpbWFnZS9ibXAnDQogICAgY29uc3QgaXNMdDJNID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCAyDQoNCiAgICBpZiAoIWlzSlBHKSB7DQogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLTlg4/lm77niYflj6rog73mmK8gSlBHL1BORy9CTVAg5qC85byPIScpDQogICAgfQ0KICAgIGlmICghaXNMdDJNKSB7DQogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLTlg4/lm77niYflpKflsI/kuI3og73otoXov4cgMk1CIScpDQogICAgfQ0KICAgIHJldHVybiBpc0pQRyAmJiBpc0x0Mk0NCiAgfQ0KICAvKioNCiAgICog5LiK5Lyg5oiQ5Yqf6ZKp5a2QDQogICAqLw0KICBwcml2YXRlIGhhbmRsZVVwbG9hZFN1Y2Nlc3MocmVzLGZpbGUpew0KDQogICAgICB0aGlzLnN5bmNlZEltYWdlVXJsID0gYCR7cHJvY2Vzcy5lbnYuVlVFX0FQUF9TRVJWRVJfUElDU0VSVkVSX1VSTH1gK3Jlcy51cmwNCiAgICAgIGNvbnNvbGUubG9nKHJlcytyZXMudXJsKQ0KICAgICAgLy8gaWYocmVzLmNvZGU9PTEpew0KICAgICAgLy8gICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpDQogICAgICAvLyB9DQogIH0NCiAgLyoqDQogICAqIOaWh+S7tuS4iuS8oOWksei0pemSqeWtkA0KICAgKi8NCg0KICBwcml2YXRlIGhhbmRsZVVwbG9hZEVycm9yKGVycil7DQogICAgY29uc29sZS5sb2coJ+S4iuS8oOWksei0pTonK2Vyci5lcnJNZXNzYWdlKQ0KICB9DQogIC8qKg0KICAgKiDopobnm5bpu5jorqTnmoTkuIrkvKDooYzkuLoNCiAgICovDQogIHByaXZhdGUgaGFuZGxlSHR0cFJlcXVlc3Qob3B0aW9uczogSHR0cFJlcXVlc3RPcHRpb25zKSB7DQogICAgbGV0IGZpbGUgPSBvcHRpb25zLmZpbGUNCiAgICBsZXQgZmlsZW5hbWUgPSBmaWxlLm5hbWUNCiAgICBsZXQgaW5kZXggPSBmaWxlbmFtZS5sYXN0SW5kZXhPZignLicpDQogICAgbGV0IHN1ZmZpeCA9IGZpbGVuYW1lLnN1YnN0cihpbmRleCkNCg0KICAgIC8vIOaWh+aho+S4iuS8oOWIsOS4g+eJm+S6kQ0KICAgIHRoaXMucWluaXV5dW5VcGxvYWQoZmlsZSkNCiAgfQ0KDQogIC8qKg0KICAgKiDmlofmoaPkuIrkvKDliLDkuIPniZvkupENCiAgICogVE9ETzog5byC5bi457O76ICD6JmRIDQwMQ0KICAgKiBUT0RPOiDlkI7nq6/mj5DkvpvlhazlvIDotYTmupDmjqXlj6MNCiAgICovDQogIHByaXZhdGUgYXN5bmMgcWluaXV5dW5VcGxvYWQoZmlsZTogRWxVcGxvYWRJbnRlcm5hbEZpbGVEZXRhaWwpIHsNCiAgICAvLyDlh4blpIflt6XkvZwNCiAgICBsZXQgcW5QYXJhbXM6IElRblBhcmFtc0RUTyA9IGF3YWl0IGdldFFuUGFyYW1zKCkNCg0KICAgIC8vIOW8gOWni+S4iuS8oA0KICAgIGxldCB0b2tlbiA9IHFuUGFyYW1zLnFuVG9rZW4NCiAgICBsZXQgY29uZmlnID0gew0KICAgICAgdXNlQ2RuRG9tYWluOiB0cnVlLA0KICAgICAgcmVnaW9uOiBudWxsIC8vIOiHquWKqOWIhuaekOS4iuS8oOWfn+WQjeWMuuWfnw0KICAgIH0NCiAgICBsZXQgcHV0RXh0cmEgPSB7DQogICAgICBmbmFtZTogJycsDQogICAgICBwYXJhbXM6IHt9LA0KICAgICAgbWltZVR5cGU6IG51bGwNCiAgICB9DQogICAgbGV0IGtleSA9IHFuUGFyYW1zLmtleQ0KDQogICAgbGV0IG5leHQgPSByZXNwb25zZSA9PiB7DQogICAgICBsZXQgdG90YWwgPSByZXNwb25zZS50b3RhbA0KICAgICAgbGV0IHBlcmNlbnRhZ2UgPSBNYXRoLmNlaWwodG90YWwucGVyY2VudCkNCiAgICAgIGNvbnNvbGUubG9nKGDlqpLotYTkuIrkvKDliLDkuIPniZvkupHov5vluqYuLi4ke3BlcmNlbnRhZ2V9JWApDQogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkNCiAgICB9DQogICAgbGV0IGVycm9yID0gcmVzcG9uc2UgPT4gew0KICAgICAgY29uc29sZS5sb2coJ+Wqkui1hOS4iuS8oOWIsOS4g+eJm+S6keWksei0pS4uLicpDQogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkNCiAgICB9DQogICAgbGV0IGNvbXBsZXRlID0gcmVzcG9uc2UgPT4gew0KICAgICAgdGhpcy5zeW5jZWRJbWFnZVVybCA9IGBodHRwOi8vJHtxblBhcmFtcy5kb21haW59LyR7cW5QYXJhbXMua2V5fWANCiAgICAgIGNvbnNvbGUubG9nKCflqpLotYTkuIrkvKDliLDkuIPniZvkupHlrozmiJAuLi4nKQ0KICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpDQogICAgfQ0KDQogICAgbGV0IHN1YnNjcmlwdGlvbg0KICAgIC8vIOiwg+eUqHNka+S4iuS8oOaOpeWPo+iOt+W+l+ebuOW6lOeahG9ic2VydmFibGXvvIzmjqfliLbkuIrkvKDlkozmmoLlgZwNCiAgICBsZXQgb2JzZXJ2YWJsZSA9IHFpbml1LnVwbG9hZChmaWxlLCBrZXksIHRva2VuLCBwdXRFeHRyYSwgY29uZmlnKQ0KICAgIG9ic2VydmFibGUuc3Vic2NyaWJlKG5leHQsIGVycm9yLCBjb21wbGV0ZSkNCiAgICBjb25zb2xlLmxvZygn5aqS6LWE5LiK5Lyg5Yiw5LiD54mb5LqR5byA5aeLLi4uJykNCiAgfQ0KDQogIC8qKg0KICAgKiDngrnlh7vmlofku7bliJfooajkuK3lt7LkuIrkvKDnmoTmlofku7bml7bnmoTpkqnlrZANCiAgICovDQogIHByaXZhdGUgaGFuZGxlT25QcmV2aWV3KGZpbGU6IEVsVXBsb2FkSW50ZXJuYWxGaWxlRGV0YWlsKSB7DQogICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQ0KICB9DQoNCiAgLyoqDQogICAqIOaWh+S7tuWIl+ihqOenu+mZpOaWh+S7tuaXtueahOmSqeWtkA0KICAgKi8NCiAgcHJpdmF0ZSBoYW5kbGVPblJlbW92ZSgNCiAgICBmaWxlOiBFbFVwbG9hZEludGVybmFsRmlsZURldGFpbCwNCiAgICBmaWxlTGlzdDogRWxVcGxvYWRJbnRlcm5hbEZpbGVEZXRhaWxbXQ0KICApIHsNCiAgICB0aGlzLnN5bmNlZEltYWdlVXJsID0gJycNCiAgfQ0KfQ0K"},{"version":3,"sources":["common-entering-step2-upload-image.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"common-entering-step2-upload-image.vue","sourceRoot":"src/module-entering/pages/entering/components","sourcesContent":["<template>\r\n  <div>\r\n    <el-upload\r\n      action\r\n      list-type=\"picture-card\"\r\n      accept=\".jpg, .png, .bmp\"\r\n      :file-list=\"fileList\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n      :on-success=\"handleUploadSuccess\"\r\n      :on-error=\"handleUploadError\"\r\n      action=\"/api/media/upload/coursefile\"\r\n      name=\"filedata\"\r\n      :on-preview=\"handleOnPreview\"\r\n      :on-remove=\"handleOnRemove\"\r\n      :class=\"{disabled:uploadDisabled}\"\r\n    >\r\n      <i class=\"el-icon-plus\"></i>\r\n      <div class=\"el-upload__tip\" slot=\"tip\" style=\"line-height: 20px;\">\r\n        <slot></slot>\r\n        <br />文件小于2M\r\n        <br />支持JPG/PNG/BMP等格式图片\r\n      </div>\r\n    </el-upload>\r\n    <el-dialog :visible.sync=\"dialogVisible\">\r\n      <img width=\"100%\" :src=\"syncedImageUrl\" alt />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue, PropSync, Watch } from 'vue-property-decorator'\r\nimport {\r\n  ElUploadInternalRawFile,\r\n  ElUploadInternalFileDetail,\r\n  HttpRequestOptions\r\n} from 'element-ui/types/upload'\r\nimport * as qiniu from 'qiniu-js'\r\nimport { IQnParamsDTO } from '@/entity/media-page-list'\r\nimport { getQnParams } from '@/api/common'\r\n\r\n@Component\r\nexport default class CommonEnteringStep2UploadImage extends Vue {\r\n  private dialogVisible: boolean = false\r\n\r\n  @PropSync('imageUrl', { type: String, required: false, default: '' })\r\n  syncedImageUrl!: string\r\n\r\n  @Watch('syncedImageUrl')\r\n  onImageUrlChanged(newImageUrl: string, oldImageUrl: string) {\r\n    // console.log('--------------onImageUrlChanged前--------------')\r\n    // console.log(this.fileList)\r\n    if (newImageUrl) {\r\n      this.fileList = [{ url: newImageUrl }]\r\n    } else {\r\n      this.fileList = []\r\n    }\r\n    //解决回退到上一页路径前缀消失问题\r\n    // if(this.syncedImageUrl.length>0 && this.syncedImageUrl.indexOf(`${process.env.VUE_APP_SERVER_PICSERVER_URL}`)<0){\r\n      \r\n    //   this.syncedImageUrl = `${process.env.VUE_APP_SERVER_PICSERVER_URL}`+this.syncedImageUrl;\r\n    //   alert(this.syncedImageUrl)\r\n    // }\r\n    // console.log('--------------onImageUrlChanged后--------------')\r\n    // console.log(this.fileList)\r\n  }\r\n\r\n  private fileList: any[] = []\r\n\r\n  // computed\r\n  get uploadDisabled() {\r\n    return this.fileList.length > 0\r\n  }\r\n\r\n  /**\r\n   * 上传文件之前的钩子\r\n   * TODO: 增加其他文件格式\r\n   */\r\n  private handleBeforeUpload(file: ElUploadInternalRawFile) {\r\n    const isJPG =\r\n      file.type === 'image/jpeg' ||\r\n      file.type === 'image/png' ||\r\n      file.type === 'image/bmp'\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n    if (!isJPG) {\r\n      this.$message.error('上传头像图片只能是 JPG/PNG/BMP 格式!')\r\n    }\r\n    if (!isLt2M) {\r\n      this.$message.error('上传头像图片大小不能超过 2MB!')\r\n    }\r\n    return isJPG && isLt2M\r\n  }\r\n  /**\r\n   * 上传成功钩子\r\n   */\r\n  private handleUploadSuccess(res,file){\r\n\r\n      this.syncedImageUrl = `${process.env.VUE_APP_SERVER_PICSERVER_URL}`+res.url\r\n      console.log(res+res.url)\r\n      // if(res.code==1){\r\n      //   this.$message.error(res.msg)\r\n      // }\r\n  }\r\n  /**\r\n   * 文件上传失败钩子\r\n   */\r\n\r\n  private handleUploadError(err){\r\n    console.log('上传失败:'+err.errMessage)\r\n  }\r\n  /**\r\n   * 覆盖默认的上传行为\r\n   */\r\n  private handleHttpRequest(options: HttpRequestOptions) {\r\n    let file = options.file\r\n    let filename = file.name\r\n    let index = filename.lastIndexOf('.')\r\n    let suffix = filename.substr(index)\r\n\r\n    // 文档上传到七牛云\r\n    this.qiniuyunUpload(file)\r\n  }\r\n\r\n  /**\r\n   * 文档上传到七牛云\r\n   * TODO: 异常系考虑 401\r\n   * TODO: 后端提供公开资源接口\r\n   */\r\n  private async qiniuyunUpload(file: ElUploadInternalFileDetail) {\r\n    // 准备工作\r\n    let qnParams: IQnParamsDTO = await getQnParams()\r\n\r\n    // 开始上传\r\n    let token = qnParams.qnToken\r\n    let config = {\r\n      useCdnDomain: true,\r\n      region: null // 自动分析上传域名区域\r\n    }\r\n    let putExtra = {\r\n      fname: '',\r\n      params: {},\r\n      mimeType: null\r\n    }\r\n    let key = qnParams.key\r\n\r\n    let next = response => {\r\n      let total = response.total\r\n      let percentage = Math.ceil(total.percent)\r\n      console.log(`媒资上传到七牛云进度...${percentage}%`)\r\n      console.log(response)\r\n    }\r\n    let error = response => {\r\n      console.log('媒资上传到七牛云失败...')\r\n      console.log(response)\r\n    }\r\n    let complete = response => {\r\n      this.syncedImageUrl = `http://${qnParams.domain}/${qnParams.key}`\r\n      console.log('媒资上传到七牛云完成...')\r\n      console.log(response)\r\n    }\r\n\r\n    let subscription\r\n    // 调用sdk上传接口获得相应的observable，控制上传和暂停\r\n    let observable = qiniu.upload(file, key, token, putExtra, config)\r\n    observable.subscribe(next, error, complete)\r\n    console.log('媒资上传到七牛云开始...')\r\n  }\r\n\r\n  /**\r\n   * 点击文件列表中已上传的文件时的钩子\r\n   */\r\n  private handleOnPreview(file: ElUploadInternalFileDetail) {\r\n    this.dialogVisible = true\r\n  }\r\n\r\n  /**\r\n   * 文件列表移除文件时的钩子\r\n   */\r\n  private handleOnRemove(\r\n    file: ElUploadInternalFileDetail,\r\n    fileList: ElUploadInternalFileDetail[]\r\n  ) {\r\n    this.syncedImageUrl = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.disabled .el-upload--picture-card {\r\n  display: none;\r\n}\r\n</style>"]}]}