{"remainingRequest":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\src\\module-organization\\pages\\course-manage\\course-add-step2-outline.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\src\\module-organization\\pages\\course-manage\\course-add-step2-outline.vue","mtime":1661252832903},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660903053592},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660903053930},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\postcss-loader\\src\\index.js","mtime":1576202027988},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660903055666},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"E:\\course\\2022\\学成在线\\front_code\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5vdXRsaW5lIHsNCiAgLmVsLXRyZWUtbm9kZV9fZXhwYW5kLWljb24gew0KICAgIGRpc3BsYXk6IG5vbmU7DQogIH0NCiAgLy8gLmVsLXRyZWUtbm9kZV9fY29udGVudCB7DQogIC8vICAgaGVpZ2h0OiA1MHB4Ow0KICAvLyB9DQogIC5lbC10cmVlLW5vZGVfX2NvbnRlbnQgew0KICAgIC8vIGhlaWdodDogODBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogIH0NCiAgLmVsLWJ1dHRvbi0tdGV4dCB7DQogICAgY29sb3I6ICM2NjY2NjY7DQogICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgfQ0KDQogIC5lbC1kYXRlLWVkaXRvciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7DQogICAgd2lkdGg6IDIwMHB4Ow0KICB9DQogIC5lbC1pbnB1dF9faW5uZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Ow0KICAgIGJvcmRlcjogMHB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["course-add-step2-outline.vue"],"names":[],"mappingsqiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"course-add-step2-outline.vue","sourceRoot":"src/module-organization/pages/course-manage","sourcesContent":["<template>\r\n  <div class=\"step-body\">\r\n    <!-- 工具栏 -->\r\n    <div class=\"bar\">\r\n      <div class=\"title\">任务总数：{{outlineData.length}}</div>\r\n      <el-button size=\"medium\" plain class=\"el-button\" @click=\"handleAddChapter\">+添加章</el-button>\r\n    </div>\r\n\r\n    <!-- 大纲列表 -->\r\n    <div class=\"outline\">\r\n      <el-tree\r\n        v-if=\"outlineData.teachPlanTreeNodes\"\r\n        :data=\"outlineData.teachPlanTreeNodes\"\r\n        node-key=\"teachPlanId\"\r\n        :props=\"defaultProps\"\r\n        :default-expanded-keys=\"outlineData.teachPlanTreeNodes.map(item=> item.teachPlanId)\"\r\n      >\r\n        <!-- 自定义行 -->\r\n        <template slot-scope=\"{ node, data }\">\r\n          <div\r\n            class=\"tree-node\"\r\n            :class=\"{ ischild: data.grade == '3' }\"\r\n            @mousemove=\"data.ctlBarShow = true\"\r\n            @mouseleave=\"data.ctlBarShow = false\"\r\n          >\r\n            <div class=\"icon\"></div>\r\n            <div class=\"operate\">\r\n              <!-- 输入框 -->\r\n              <div class=\"title\" @click.stop=\"handleEditTitle(data)\">\r\n                <span v-if=\"!data.ctlEditTitle\">\r\n                  {{ data.pname }}\r\n                </span>\r\n                <input\r\n                  v-focus\r\n                  v-else\r\n                  v-model=\"data.pname\"\r\n                  v-on:keyup.enter=\"data.ctlEditTitle=false\"\r\n                  @blur=\"handleEditTitleBlue(data)\"\r\n                  style=\"width:280px; height:30px;\"\r\n                />\r\n              </div>\r\n              <div class=\"preview\" v-if=\"data.grade == '3'\">\r\n                <el-checkbox\r\n                  v-model=\"data.isPreview\"\r\n                  true-label=\"1\"\r\n                  false-label=\"0\"\r\n                  @change=\"handleChangeIsPreview(data)\"\r\n                >免费</el-checkbox>\r\n              </div>\r\n              <!-- 时间 -->\r\n              <div class=\"submit-time\" v-if=\"data.grade == '3' && teachmode == '200003'\">\r\n                <!-- <span>{{ data.createDate | dateFmt }} ~ {{ data.createDate | endDateFmt }}</span> -->\r\n                <el-date-picker\r\n                  @change=\"handleChangePublishTime(data)\"\r\n                  v-model=\"data.startTime\"\r\n                  type=\"datetime\"\r\n                  placeholder=\"选择开始时间\"\r\n                  default-time=\"12:00:00\"\r\n                  :clearable=\"false\"\r\n                  value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                ></el-date-picker>~\r\n                <el-date-picker\r\n                  @change=\"handleChangePublishTime(data)\"\r\n                  v-model=\"data.endTime\"\r\n                  type=\"datetime\"\r\n                  placeholder=\"选择结束时间\"\r\n                  default-time=\"12:00:00\"\r\n                  :clearable=\"false\"\r\n                  value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                ></el-date-picker>\r\n              </div>\r\n              <!-- 作业、媒体 -->\r\n              <div class=\"media-file\" v-if=\"data.grade == '3'\">\r\n                <el-link\r\n                  v-if=\"data.teachplanMedia != null && data.teachplanMedia.mediaFilename != null && data.teachplanMedia.mediaFilename != '' \"\r\n                  icon=\"el-icon-delete\"\r\n                  :underline=\"false\"\r\n                  @click=\"handleDeleteMedia(data)\"\r\n                >{{data.teachplanMedia.mediaFilename}}</el-link>\r\n                <el-link\r\n                  v-else-if=\"data.work != null && data.work.workTitle != ''\"\r\n                  icon=\"el-icon-delete\"\r\n                  :underline=\"false\"\r\n                  @click=\"handleDeleteWork(data)\"\r\n                >{{data.work.workTitle}}</el-link>\r\n              </div>\r\n              <!-- 按钮 -->\r\n              <div class=\"buttons\" v-if=\"data.grade == '2' \">\r\n                <el-button\r\n                  type=\"text\"\r\n                  @click.stop=\"handleAddSection(data.teachPlanTreeNodes, data.teachPlanId)\"\r\n                >添加小节</el-button>\r\n                <el-button type=\"text\" @click.stop=\"handleDeleteNode(data.teachPlanId)\">删除本章</el-button>\r\n              </div>\r\n            \r\n              <div class=\"buttons\" v-else-if=\"data.grade == '3'\">\r\n                <template v-if=\"teachmode=='200002'\">\r\n                  <!--  <span v-if=\"data.teachplanMedia != null \"  @click=\"handleSelectVideo(data)\">\r\n                    {{data.teachplanMedia.mediaFilename}}\r\n                    </span>-->\r\n                  <!-- 作业 -->\r\n                  <el-button\r\n                    v-if=\"data.ctlBarShow && data.teachplanMedia === null \"\r\n                    type=\"text\"\r\n                    @click.stop=\"handleSelectWork(data)\"\r\n                  >添加作业</el-button>\r\n\r\n                  <!-- 视频 -->\r\n                  <el-button\r\n                    v-if=\"data.ctlBarShow && data.teachplanMedia === null\"\r\n                    type=\"text\"\r\n                    @click.stop=\"handleSelectVideo(data)\"\r\n                  >添加视频</el-button>\r\n\r\n                  <!-- 文档 -->\r\n                  <el-button\r\n                    v-if=\"data.ctlBarShow && data.teachplanMedia === null \"\r\n                    type=\"text\"\r\n                    @click.stop=\"handleSelectDoc(data)\"\r\n                  >添加文档</el-button>\r\n                </template>\r\n                <!-- 删除 -->\r\n                <el-button type=\"text\" @click.stop=\"handleDeleteNode(data.teachPlanId)\">删除</el-button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <!-- end -->\r\n      </el-tree>\r\n\r\n      <!-- 媒体选择 -->\r\n      <OutlineSelectDialog\r\n        ref=\"outlineSelectDialog\"\r\n        :dialogVisible.sync=\"mediaDialogVisible\"\r\n        @onSelected=\"onRecvSelectedValue\"\r\n        :type=\"selectType\"\r\n        :title=\"selectTypeTitle\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script lang=\"ts\">\r\nimport moment from 'moment'\r\nimport { Component, Prop, PropSync, Watch, Vue } from 'vue-property-decorator'\r\nimport { mixins } from 'vue-class-component'\r\nimport {\r\n  submitOutlineNode,\r\n  deleteOutlineNode,\r\n  getOutline,\r\n  mediaAssociation,\r\n  workAssociation,\r\n  mediaUnAssociation,\r\n  workUnAssociation\r\n} from '@/api/courses'\r\nimport { ICourseOutlineTreeNode } from '@/entity/course-add-outline'\r\nimport OutlineSelectDialog from './course-add-step2-select-dialog.vue'\r\nimport MixinTools from '@/utils/mixins.vue'\r\n\r\nmoment.locale('zh-cn') // 时间格式化\r\n\r\n@Component({\r\n  name: 'CourseAddStep2Outline',\r\n  components: {\r\n    OutlineSelectDialog\r\n  },\r\n  filters: {\r\n    // 课程计划发布状态\r\n    status: (value: string) => {\r\n      let statesText = value == '203001' ? '未发布' : '已发布'\r\n      return statesText\r\n    },\r\n    dateFmt: (value: string) => {\r\n      return moment(value).format('YYYY年MM月DD日 HH:mm')\r\n    },\r\n    endDateFmt: (value: string) => {\r\n      return moment(value).format('HH:mm')\r\n    }\r\n  }\r\n})\r\nexport default class extends mixins(MixinTools) {\r\n  @Prop({ type: Number })\r\n  courseBaseId!: number\r\n\r\n  @Prop({ type: String })\r\n  teachmode!: string\r\n\r\n  private outlineData!: ICourseOutlineTreeNode\r\n  private defaultProps = {\r\n    children: 'teachPlanTreeNodes',\r\n    label: 'pname'\r\n  }\r\n\r\n  private mediaDialogVisible: boolean = false // 选择媒体窗口\r\n  private curSelectNode: any = {} // 当前操作的媒体\r\n  private selectType: string = '' // video file doc\r\n  private selectTypeTitle: string = ''\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.outlineData = {\r\n      courseId: this.courseBaseId,\r\n      mediaType: '',\r\n      pname: '',\r\n      teachPlanTreeNodes: []\r\n    }\r\n  }\r\n\r\n  /*\r\n   功能函数\r\n   */\r\n\r\n  // 重置媒体选择\r\n  private restSelectedDialog() {\r\n    let selDialog: HTMLFormElement = this.$refs[\r\n      'outlineSelectDialog'\r\n    ] as HTMLFormElement\r\n    selDialog.restForm()\r\n  }\r\n\r\n  // 读取大纲\r\n  public async getList() {\r\n    if (this.courseBaseId != 0) {\r\n      let data = await getOutline(this.courseBaseId)\r\n      // debugger\r\n\r\n      // 设置可编辑状态\r\n      // 二级\r\n      if (\r\n        data.teachPlanTreeNodes !== null &&\r\n        data.teachPlanTreeNodes !== undefined\r\n      ) {\r\n        data.teachPlanTreeNodes = data.teachPlanTreeNodes.map((v: any) => {\r\n          // this.$set(v, 'edit', false) // https://vuejs.org/v2/guide/reactivity.html\r\n          v.ctlEditTitle = false\r\n          v.ctlBarShow = false\r\n          // 三级\r\n          if (v.teachPlanTreeNodes !== null) {\r\n            v.teachPlanTreeNodes = v.teachPlanTreeNodes.map((v: any) => {\r\n              v.ctlEditTitle = false\r\n              v.ctlBarShow = false\r\n              return v\r\n            })\r\n          }\r\n          return v\r\n        })\r\n      }\r\n\r\n      this.outlineData = data\r\n      // console.log(this.outlineData)\r\n    }\r\n  }\r\n\r\n  /*\r\n   交互操作\r\n   */\r\n\r\n  // 点击 修改标题\r\n  private handleEditTitle(data: any) {\r\n    // console.log('handleChangePName')\r\n    data.ctlEditTitle = true\r\n  }\r\n\r\n  // 失去焦点 修改标题\r\n  private async handleEditTitleBlue(data: any) {\r\n    await submitOutlineNode(data)\r\n    data.ctlEditTitle = false\r\n  }\r\n\r\n  // 添加章\r\n  private async handleAddChapter() {\r\n    let node: ICourseOutlineTreeNode = {\r\n      courseId: this.courseBaseId,\r\n      grade: 2,\r\n      pname: '新章名称 [点击修改]',\r\n      mediaType: '',\r\n      ctlEditTitle: false,\r\n      ctlBarShow: false\r\n      // teachPlanTreeNodes: []\r\n    }\r\n    await submitOutlineNode(node)\r\n    this.getList()\r\n    // this.outlineData.teachPlanTreeNodes.push(node)\r\n  }\r\n\r\n  // 添加小节\r\n  private async handleAddSection(\r\n    teachPlanTreeNodes: ICourseOutlineTreeNode[],\r\n    parentid: number\r\n  ) {\r\n    let node: ICourseOutlineTreeNode = {\r\n      courseId: this.outlineData.courseId,\r\n      parentid: parentid,\r\n      grade: 3,\r\n      pname: '新小节名称 [点击修改]',\r\n      mediaType: '',\r\n      isPreview: '0',\r\n      ctlEditTitle: false,\r\n      ctlBarShow: false\r\n      // teachPlanTreeNodes: []\r\n    }\r\n    await submitOutlineNode(node)\r\n    this.getList()\r\n    // teachPlanTreeNodes.push(node)\r\n  }\r\n\r\n  // 删除小节\r\n  private async handleDeleteNode(teachPlanId: number) {\r\n    try {\r\n      await this.showDeleteConfirm()\r\n      await deleteOutlineNode(teachPlanId)\r\n      this.getList()\r\n    } catch (error) {}\r\n  }\r\n\r\n  // 免费学习本章\r\n  private async handleChangeIsPreview(node: ICourseOutlineTreeNode) {\r\n    // console.log(node)\r\n    await submitOutlineNode(node)\r\n  }\r\n\r\n  // 修改发布时间\r\n  private async handleChangePublishTime(node: ICourseOutlineTreeNode) {\r\n    // console.log(node)\r\n    await submitOutlineNode(node)\r\n  }\r\n\r\n  // 选择作业\r\n  private handleSelectWork(node: ICourseOutlineTreeNode) {\r\n    this.restSelectedDialog()\r\n    this.selectType = 'work'\r\n    this.selectTypeTitle = '选择作业'\r\n    this.mediaDialogVisible = true\r\n    this.curSelectNode = node\r\n  }\r\n\r\n  // 选择视频\r\n  private handleSelectVideo(node: ICourseOutlineTreeNode) {\r\n\r\n    this.restSelectedDialog()\r\n    this.selectType = 'video'\r\n    this.selectTypeTitle = '选择视频'\r\n    this.mediaDialogVisible = true\r\n    this.curSelectNode = node\r\n  }\r\n\r\n  // 选择文档\r\n  private handleSelectDoc(node: ICourseOutlineTreeNode) {\r\n    this.restSelectedDialog()\r\n    this.selectType = 'doc'\r\n    this.selectTypeTitle = '选择文档'\r\n    this.mediaDialogVisible = true\r\n    this.curSelectNode = node\r\n  }\r\n\r\n  // 收到选中数据\r\n  private async onRecvSelectedValue(ret: any) {\r\n    // // console.log(ret)\r\n    // if (this.curSelectNode.teachplanMedia == null) {\r\n    //   this.curSelectNode.teachplanMedia = {}\r\n    // }\r\n    // this.curSelectNode.teachplanMedia.mediaId = 0\r\n    // this.curSelectNode.teachplanMedia.mediaFileName = ''\r\n\r\n    // if (this.curSelectNode.work == null) {\r\n    //   this.curSelectNode.work = {}\r\n    // }\r\n    // this.curSelectNode.work.question = ''\r\n    // this.curSelectNode.work.title = ''\r\n\r\n    // if (ret.type === 'video' || ret.type === 'doc') {\r\n    //   this.curSelectNode.teachplanMedia.mediaId = ret.value.id\r\n    //   this.curSelectNode.teachplanMedia.mediaFileName = ret.value.filename\r\n    //   await mediaAssociation(ret.value.id, this.curSelectNode.teachPlanId)\r\n    // } else if (ret.type === 'work') {\r\n    //   this.curSelectNode.work.question = ret.value.question\r\n    //   this.curSelectNode.work.title = ret.value.title\r\n    //   await submitOutlineNode(this.curSelectNode)\r\n    // }\r\n    if (ret.type === 'video' || ret.type === 'doc') {\r\n      await mediaAssociation(ret.value.id, this.curSelectNode.teachPlanId)\r\n    } else if (ret.type === 'work') {\r\n      await workAssociation(\r\n        this.curSelectNode.teachPlanId,\r\n        ret.value.workId,\r\n        ret.value.title\r\n      )\r\n    }\r\n    this.getList()\r\n  }\r\n\r\n  // 删除 媒体\r\n  private async handleDeleteMedia(node: ICourseOutlineTreeNode) {\r\n    console.log(node)\r\n    try {\r\n      if (\r\n        node.teachplanMedia === undefined ||\r\n        node.teachplanMedia.teachplanId === undefined\r\n      ) {\r\n        return\r\n      }\r\n      await this.showDeleteConfirm()\r\n      await mediaUnAssociation(\r\n        node.teachplanMedia.teachplanId,\r\n        node.teachplanMedia.mediaId,\r\n        this.courseBaseId\r\n      )\r\n      this.getList()\r\n    } catch (error) {}\r\n  }\r\n\r\n  // 删除 作业\r\n  private async handleDeleteWork(node: ICourseOutlineTreeNode) {\r\n    try {\r\n      if (node.work === undefined || node.work.teachplanWorkId === undefined) {\r\n        return\r\n      }\r\n      await this.showDeleteConfirm()\r\n      await workUnAssociation(node.work.teachplanWorkId, this.courseBaseId)\r\n      this.getList()\r\n    } catch (error) {}\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.step-body {\r\n  width: 1138px;\r\n  margin: 0px auto;\r\n\r\n  .bar {\r\n    .title {\r\n      display: inline-block;\r\n      width: 100px;\r\n      height: 22px;\r\n      font-size: 16px;\r\n      font-family: PingFangSC-Regular, PingFang SC;\r\n      font-weight: 400;\r\n      color: rgba(51, 51, 51, 1);\r\n      line-height: 22px;\r\n    }\r\n    .el-button {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .outline {\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    // margin: 0px auto;\r\n    width: 1100px;\r\n\r\n    .tree-node {\r\n      // background-color: blueviolet;\r\n      height: 50px;\r\n      line-height: 50px;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        display: none;\r\n      }\r\n\r\n      .operate {\r\n        position: relative;\r\n        float: left;\r\n        padding-left: 10px;\r\n        background-color: #f1f1f1;\r\n        width: 1093px;\r\n        height: 50px;\r\n        line-height: 50px;\r\n        &:hover {\r\n          background-color: #ebf8ff;\r\n        }\r\n\r\n        .title {\r\n          float: left;\r\n          padding-right: 10px;\r\n          width: 400px;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .preview {\r\n          float: left;\r\n          padding-right: 10px;\r\n          width: 80px;\r\n        }\r\n\r\n        .submit-time {\r\n          float: left;\r\n          // margin-left: 20px;\r\n        }\r\n\r\n        .media-file {\r\n          float: left;\r\n          margin-left: 10px;\r\n        }\r\n\r\n        .buttons {\r\n          position: absolute;\r\n          top: 0px;\r\n          right: 10px;\r\n          text-align: right;\r\n          // background-color: aqua;\r\n          width: 300px;\r\n          height: 50px;\r\n          line-height: 50px;\r\n          div {\r\n            display: inline-block;\r\n            height: 50px;\r\n            line-height: 50px;\r\n            margin: 0px 10px;\r\n          }\r\n        }\r\n        // .title {\r\n        //   display: inline-block;\r\n        //   line-height: 120px;\r\n        //   height: 120px;\r\n        // }\r\n      }\r\n    }\r\n\r\n    .ischild {\r\n      border-left: 1px solid #cacaca;\r\n      padding-top: 15px;\r\n      height: 80px;\r\n      line-height: 80px;\r\n      .icon {\r\n        display: block;\r\n        float: left;\r\n        // background-color: aqua;\r\n        width: 34px;\r\n        height: 25px;\r\n        border-bottom: 1px solid #cacaca;\r\n      }\r\n\r\n      .operate {\r\n        width: 1040px;\r\n        .title {\r\n          width: 300px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.outline {\r\n  .el-tree-node__expand-icon {\r\n    display: none;\r\n  }\r\n  // .el-tree-node__content {\r\n  //   height: 50px;\r\n  // }\r\n  .el-tree-node__content {\r\n    // height: 80px;\r\n    height: auto;\r\n  }\r\n  .el-button--text {\r\n    color: #666666;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .el-date-editor {\r\n    background-color: transparent;\r\n    width: 200px;\r\n  }\r\n  .el-input__inner {\r\n    background-color: transparent;\r\n    border: 0px;\r\n  }\r\n}\r\n</style>\r\n"]}]}