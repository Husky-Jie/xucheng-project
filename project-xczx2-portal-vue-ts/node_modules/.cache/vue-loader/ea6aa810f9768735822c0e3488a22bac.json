{"remainingRequest":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\forget-password\\components\\change-password-step1-verify-phone.vue?vue&type=style&index=0&id=3c2358a6&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\forget-password\\components\\change-password-step1-verify-phone.vue","mtime":1586849107733},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660903053592},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660903053930},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\postcss-loader\\src\\index.js","mtime":1576202027988},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660903055666},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi52ZXJpZnktYnV0dG9uIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQo="},{"version":3,"sources":["change-password-step1-verify-phone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA","file":"change-password-step1-verify-phone.vue","sourceRoot":"src/module-portal/pages/forget-password/components","sourcesContent":["\r\n<template>\r\n  <div class=\"signItem\">\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-position=\"top\">\r\n      <el-form-item label=\"手机号：\" prop=\"phone\">\r\n        <el-input v-model=\"form.phone\" placeholder></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"验证码：\" prop=\"verifyCode\">\r\n        <el-row :gutter=\"10\" justify=\"space-between\">\r\n          <el-col :span=\"16\">\r\n            <el-input v-model=\"form.verifyCode\" placeholder></el-input>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-button\r\n              type=\"primary\"\r\n              :disabled=\"isSending\"\r\n              class=\"verify-button\"\r\n              @click=\"smsMsg\"\r\n            >{{ buttonTips }}</el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { Form as ElForm } from 'element-ui'\r\nimport { smsMsg } from '@/api/common'\r\nimport { verify } from '@/api/learning-user'\r\n\r\nconst TIME_COUNT = 90\r\n@Component\r\nexport default class ChangePasswordStep1VerifyPhone extends Vue {\r\n  // 验证码\r\n  private isSending: boolean = false\r\n  private sendTimer: number = 0\r\n  private sendCount: number = 0\r\n  // 表单数据\r\n  private form: any = {\r\n    phone: '',\r\n    verifyCode: '',\r\n    verifyKey: ''\r\n  }\r\n  // 手机号正则，参考：http://caibaojian.com/phone-regexp.html\r\n  private validatePhone = (rule: any, value: any, callback: any) => {\r\n    if (!/^1[0-9]{10}$/.test(value)) {\r\n      callback(new Error('请输入正确的手机号'))\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  // 表单验证\r\n  private rules: any = {\r\n    phone: [\r\n      { required: true, message: '请填写手机号', trigger: 'change' },\r\n      { validator: this.validatePhone, trigger: 'change' }\r\n    ],\r\n    verifyCode: [{ required: true, message: '请填写验证码', trigger: 'change' }]\r\n  }\r\n  // computed\r\n  get buttonTips() {\r\n    if (!this.isSending) {\r\n      return '获取验证码'\r\n    }\r\n    return `${this.sendCount}s`\r\n  }\r\n\r\n  /**\r\n   * 发送短信验证码\r\n   */\r\n  private async smsMsg() {\r\n    let form = this.$refs['form'] as ElForm\r\n    form.validateField('phone', async (errorMessage: string) => {\r\n      if (errorMessage) {\r\n        return\r\n      }\r\n      this.isSending = true\r\n      this.sendCount = TIME_COUNT\r\n      this.form.verifyKey = await smsMsg(this.form.phone)\r\n\r\n      this.sendTimer = setInterval(() => {\r\n        if (this.sendCount > 0) {\r\n          this.sendCount--\r\n        } else {\r\n          clearInterval(this.sendTimer)\r\n          this.isSending = false\r\n        }\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 验证短信验证码\r\n   */\r\n  public async verify(): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      let form = this.$refs['form'] as ElForm\r\n      form.validate(async (isValid: boolean) => {\r\n        if (isValid) {\r\n          let verifyToken: string = await verify(this.form)\r\n          this.$emit('formInfo', {\r\n            phone: this.form.phone,\r\n            verifyToken: verifyToken\r\n          })\r\n          resolve()\r\n        } else {\r\n          reject()\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.verify-button {\r\n  width: 100%;\r\n}\r\n</style>"]}]}