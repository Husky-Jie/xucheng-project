{"remainingRequest":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\src\\module-organization\\pages\\media-manage\\components\\media-add-dialog.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\src\\module-organization\\pages\\media-manage\\components\\media-add-dialog.vue","mtime":1676692684068},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":1576202003988},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\ts-loader\\index.js","mtime":1660903053026},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\itcast2023\\xc_edu3.1\\code_402\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSwgUHJvcFN5bmMgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJw0KaW1wb3J0IHsNCiAgRWxVcGxvYWRJbnRlcm5hbFJhd0ZpbGUsDQogIEVsVXBsb2FkSW50ZXJuYWxGaWxlRGV0YWlsLA0KICBIdHRwUmVxdWVzdE9wdGlvbnMNCn0gZnJvbSAnZWxlbWVudC11aS90eXBlcy91cGxvYWQnDQoNCmltcG9ydCAqIGFzIHFpbml1IGZyb20gJ3Fpbml1LWpzJw0KaW1wb3J0IHsgQmFzZTY0IH0gZnJvbSAnanMtYmFzZTY0Jw0KaW1wb3J0IHsgSVFuUGFyYW1zRFRPLCBJVm9kVG9rZW5EVE8gfSBmcm9tICdAL2VudGl0eS9tZWRpYS1wYWdlLWxpc3QnDQppbXBvcnQgeyBnZXRRblBhcmFtcyB9IGZyb20gJ0AvYXBpL2NvbW1vbicNCmltcG9ydCB7IGdldFZvZFRva2VuLCBzYXZlTWVkaWEgfSBmcm9tICdAL2FwaS9tZWRpYScNCmltcG9ydCB7dXBsb2FkQnlQaWVjZXN9IGZyb20gJ0AvdXRpbHMvdXBsb2FkdG9vbHMnDQoNCkBDb21wb25lbnQNCmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lZGlhQWRkRGlhbG9nIGV4dGVuZHMgVnVlIHsNCiAgQFByb3BTeW5jKCdkaWFsb2dWaXNpYmxlJywgeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9KQ0KICBzeW5jRGlhbG9nVmlzaWJsZSE6IGJvb2xlYW4NCg0KICAvLyDmlofmoaPlkI7nvIDlkI3liJfooagNCiAgcHJpdmF0ZSBtc0RvY3VtZW50U3VmZml4OiBzdHJpbmdbXSA9IFsNCiAgICAnLmRvYycsDQogICAgJy5kb2N4JywNCiAgICAnLnhscycsDQogICAgJy54bHN4JywNCiAgICAnLnBwdCcsDQogICAgJy5wcHR4JywNCiAgICAnLnBkZicNCiAgXQ0KICAvLyDpn7Mv6KeG6aKR5ZCO57yA5ZCN5YiX6KGoDQogIHByaXZhdGUgYXVkaW9WaWRlb1N1ZmZpeDogc3RyaW5nW10gPSBbJy5tcDMnLCAnLndtYScsICcuYXZpJywgJy5tcDQnXQ0KICAvLyDkuIrkvKDnmoTmlofku7bliJfooagNCiAgcHJpdmF0ZSBmaWxlTGlzdDogRWxVcGxvYWRJbnRlcm5hbEZpbGVEZXRhaWxbXSA9IFtdDQoNCiAgLyoqDQogICAqIOeUn+WRveWRqOacn+mSqeWtkA0KICAgKi8NCiAgY3JlYXRlZCgpIHt9DQoNCiAgLyoqDQogICAqIOaWh+S7tueKtuaAgeaUueWPmOaXtueahOmSqeWtkA0KICAgKi8NCiAgLy8g5paH5Lu25YiG5Z2X5LiK5LygIA0KICBwcml2YXRlIGhhbmRsZUNoYW5nZSgNCiAgICBmaWxlOiBFbFVwbG9hZEludGVybmFsRmlsZURldGFpbCwNCiAgICBmaWxlTGlzdDogRWxVcGxvYWRJbnRlcm5hbEZpbGVEZXRhaWxbXQ0KICApIHsNCiAgICB0aGlzLmZpbGVMaXN0ID0gZmlsZUxpc3QNCiAgICB1cGxvYWRCeVBpZWNlcyh7DQogICAgICBmaWxlLA0KICAgICAgcGllY2VTaXplOiA1LCAvL+WIhueJh+Wkp+Wwjw0KICAgICAgc3VjY2VzczogKGRhdGEpID0+IHsNCiAgICAgICAgZmlsZS5wZXJjZW50YWdlID0gKGRhdGEubnVtL2RhdGEuY2h1bmtDb3VudCkgKiAxMDANCiAgICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3M6OicgKyBkYXRhKQ0KICAgICAgfSwNCiAgICAgIGVycm9yOiAoZSkgPT4gew0KICAgICAgICBjb25zb2xlLmxvZyhmaWxlLCBmaWxlTGlzdCkNCiAgICAgICAgLy8g5Ye66ZSZ5LqG5Y+v5Lul5LuO5YiX6KGo5Lit5Yig6Zmk5ZCnDQogICAgICAgIC8vIGZpbGVMaXN0LmZvckVhY2goKG4saSkgPT4geyBpZihuLnVpZCA9PSBmaWxlLnVpZCl7DQogICAgICAgIC8vICAgZmlsZUxpc3Quc3BsaWNlKGksMSkNCiAgICAgICAgLy8gfSB9KQ0KICAgICAgICBjb25zb2xlLmxvZygnZXJyb3I6OicgKyAn6KeG6aKR5YiG54mH5LiK5Lyg5aSx6LSlJykNCiAgICAgIH0NCiAgICB9KQ0KICB9DQoNCiAgLyoqDQogICAqIOS4iuS8oOaWh+S7tuS5i+WJjeeahOmSqeWtkA0KICAgKi8NCiAgcHJpdmF0ZSBoYW5kbGVCZWZvcmVVcGxvYWQoZmlsZTogRWxVcGxvYWRJbnRlcm5hbFJhd0ZpbGUpIHsNCiAgICBsZXQgdmFsaWRTdWZmaXggPSB0aGlzLm1zRG9jdW1lbnRTdWZmaXguY29uY2F0KHRoaXMuYXVkaW9WaWRlb1N1ZmZpeCkNCiAgICBsZXQgZmlsZW5hbWUgPSBmaWxlLm5hbWUNCiAgICBsZXQgaW5kZXggPSBmaWxlbmFtZS5sYXN0SW5kZXhPZignLicpDQogICAgbGV0IHN1ZmZpeCA9IGZpbGVuYW1lLnN1YnN0cihpbmRleCkNCg0KICAgIGNvbnN0IGlzVmFsaWQgPSB2YWxpZFN1ZmZpeC5pbmRleE9mKHN1ZmZpeCkgIT09IC0xDQogICAgaWYgKCFpc1ZhbGlkKSB7DQogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGDkuIrkvKDlqpLotYTmlofku7blj6rog73mmK8gJHt2YWxpZFN1ZmZpeC50b1N0cmluZygpfSDmoLzlvI/vvIFgKQ0KICAgIH0NCiAgICByZXR1cm4gaXNWYWxpZA0KICB9DQoNCiAgLyoqDQogICAqIOimhueblum7mOiupOeahOS4iuS8oOihjOS4ug0KICAgKi8NCiAgcHJpdmF0ZSBoYW5kbGVIdHRwUmVxdWVzdChvcHRpb25zOiBIdHRwUmVxdWVzdE9wdGlvbnMpIHsNCiAgICBsZXQgZmlsZSA9IG9wdGlvbnMuZmlsZQ0KICAgIGxldCBmaWxlbmFtZSA9IGZpbGUubmFtZQ0KICAgIGxldCBpbmRleCA9IGZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykNCiAgICBsZXQgc3VmZml4ID0gZmlsZW5hbWUuc3Vic3RyKGluZGV4KQ0KDQogICAgaWYgKHRoaXMuYXVkaW9WaWRlb1N1ZmZpeC5pbmRleE9mKHN1ZmZpeCkgIT09IC0xKSB7DQogICAgICAvLyDpn7Mv6KeG6aKR5LiK5Lyg5Yiw6Zi/6YeM5LqRDQogICAgICB0aGlzLmFsaXl1blVwbG9hZChmaWxlKQ0KICAgIH0gZWxzZSB7DQogICAgICAvLyDmlofmoaPkuIrkvKDliLDkuIPniZvkupENCiAgICAgIHRoaXMucWluaXV5dW5VcGxvYWQoZmlsZSkNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICog5paH5qGj5LiK5Lyg5Yiw5LiD54mb5LqRDQogICAqIFRPRE86IOW8guW4uOezu+iAg+iZkSA0MDENCiAgICovDQogIHByaXZhdGUgYXN5bmMgcWluaXV5dW5VcGxvYWQoZmlsZTogRWxVcGxvYWRJbnRlcm5hbEZpbGVEZXRhaWwpIHsNCiAgICAvLyDlh4blpIflt6XkvZwNCiAgICBsZXQgcW5QYXJhbXM6IElRblBhcmFtc0RUTyA9IGF3YWl0IGdldFFuUGFyYW1zKCkNCg0KICAgIC8vIOW8gOWni+S4iuS8oA0KICAgIGxldCB0b2tlbiA9IHFuUGFyYW1zLnFuVG9rZW4NCiAgICBsZXQgY29uZmlnID0gew0KICAgICAgdXNlQ2RuRG9tYWluOiB0cnVlLA0KICAgICAgcmVnaW9uOiBudWxsIC8vIOiHquWKqOWIhuaekOS4iuS8oOWfn+WQjeWMuuWfnw0KICAgIH0NCiAgICBsZXQgcHV0RXh0cmEgPSB7DQogICAgICBmbmFtZTogJycsDQogICAgICBwYXJhbXM6IHt9LA0KICAgICAgbWltZVR5cGU6IG51bGwNCiAgICB9DQogICAgbGV0IGtleSA9IHFuUGFyYW1zLmtleQ0KDQogICAgbGV0IG5leHQgPSByZXNwb25zZSA9PiB7DQogICAgICBsZXQgdG90YWwgPSByZXNwb25zZS50b3RhbA0KICAgICAgbGV0IHBlcmNlbnRhZ2UgPSBNYXRoLmNlaWwodG90YWwucGVyY2VudCkNCiAgICAgIGNvbnNvbGUubG9nKGDlqpLotYTkuIrkvKDliLDkuIPniZvkupHov5vluqYuLi4ke3BlcmNlbnRhZ2V9JWApDQogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkNCg0KICAgICAgLy8g5pu05paw5LiK5Lyg6L+b5bqmDQogICAgICBsZXQgY3VycmVudEZpbGUgPSB0aGlzLmZpbGVMaXN0LmZpbmQoDQogICAgICAgIChpdGVtOiBFbFVwbG9hZEludGVybmFsRmlsZURldGFpbCkgPT4gew0KICAgICAgICAgIHJldHVybiBmaWxlLnVpZCA9PSBpdGVtLnVpZA0KICAgICAgICB9DQogICAgICApDQogICAgICBpZiAoY3VycmVudEZpbGUpIHsNCiAgICAgICAgY3VycmVudEZpbGUucGVyY2VudGFnZSA9IHBlcmNlbnRhZ2UNCiAgICAgIH0NCiAgICB9DQogICAgbGV0IGVycm9yID0gcmVzcG9uc2UgPT4gew0KICAgICAgY29uc29sZS5sb2coJ+Wqkui1hOS4iuS8oOWIsOS4g+eJm+S6keWksei0pS4uLicpDQogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkNCiAgICB9DQogICAgbGV0IGNvbXBsZXRlID0gcmVzcG9uc2UgPT4gew0KICAgICAgY29uc29sZS5sb2coJ+Wqkui1hOS4iuS8oOWIsOS4g+eJm+S6keWujOaIkC4uLicpDQogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkNCg0KICAgICAgLy8g5L+d5a2Y5aqS6LWE5L+h5oGvDQogICAgICB0aGlzLnNhdmVRaW5pdXl1bk1lZGlhKGZpbGUubmFtZSwgcW5QYXJhbXMpDQogICAgfQ0KDQogICAgbGV0IHN1YnNjcmlwdGlvbg0KICAgIC8vIOiwg+eUqHNka+S4iuS8oOaOpeWPo+iOt+W+l+ebuOW6lOeahG9ic2VydmFibGXvvIzmjqfliLbkuIrkvKDlkozmmoLlgZwNCiAgICBsZXQgb2JzZXJ2YWJsZSA9IHFpbml1LnVwbG9hZChmaWxlLCBrZXksIHRva2VuLCBwdXRFeHRyYSwgY29uZmlnKQ0KICAgIG9ic2VydmFibGUuc3Vic2NyaWJlKG5leHQsIGVycm9yLCBjb21wbGV0ZSkNCiAgICBjb25zb2xlLmxvZygn5aqS6LWE5LiK5Lyg5Yiw5LiD54mb5LqR5byA5aeLLi4uJykNCiAgfQ0KDQogIC8qKg0KICAgKiDpn7Mv6KeG6aKR5LiK5Lyg5Yiw6Zi/6YeM5LqRDQogICAqIFRPRE86IOW8guW4uOezu+iAg+iZkQ0KICAgKi8NCiAgcHJpdmF0ZSBhc3luYyBhbGl5dW5VcGxvYWQoZmlsZTogRWxVcGxvYWRJbnRlcm5hbEZpbGVEZXRhaWwpIHsNCiAgICBsZXQgZmlsZU5hbWUgPSBmaWxlLm5hbWUNCiAgICBsZXQgaW5kZXggPSBmaWxlTmFtZS5sYXN0SW5kZXhPZignLicpDQogICAgbGV0IHRpdGxlID0gZmlsZU5hbWUuc3Vic3RyKDAsIGluZGV4KQ0KICAgIGxldCBib2R5ID0gew0KICAgICAgZmlsZU5hbWU6IGZpbGVOYW1lLA0KICAgICAgdGl0bGU6IHRpdGxlDQogICAgfQ0KICAgIGxldCB2b2RUb2tlbjogSVZvZFRva2VuRFRPID0gYXdhaXQgZ2V0Vm9kVG9rZW4oYm9keSkNCg0KICAgIGxldCB1c2VyRGF0YSA9ICd7IlZvZCI6e319Jw0KICAgIGxldCB1cGxvYWRlciA9IHRoaXMuY3JlYXRlVXBsb2FkZXIodm9kVG9rZW4pDQogICAgdXBsb2FkZXIuYWRkRmlsZShmaWxlLCBudWxsLCBudWxsLCBudWxsLCB1c2VyRGF0YSkNCiAgICAvLyDnhLblkI7osIPnlKggc3RhcnRVcGxvYWQg5pa55rOVLCDlvIDlp4vkuIrkvKANCiAgICBpZiAodXBsb2FkZXIgIT09IG51bGwpIHsNCiAgICAgIHVwbG9hZGVyLnN0YXJ0VXBsb2FkKCkNCiAgICB9DQogIH0NCg0KICBwcml2YXRlIGNyZWF0ZVVwbG9hZGVyKHZvZFRva2VuOiBJVm9kVG9rZW5EVE8pIHsNCiAgICBsZXQgdXBsb2FkZXIgPSBuZXcgQWxpeXVuVXBsb2FkLlZvZCh7DQogICAgICB1c2VySWQ6IHZvZFRva2VuLnVzZXJJZCwNCiAgICAgIC8vIOW8gOWni+S4iuS8oA0KICAgICAgb25VcGxvYWRzdGFydGVkOiB1cGxvYWRJbmZvID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coJ+Wqkui1hOS4iuS8oOWIsOmYv+mHjOS6keW8gOWniy4uLicpDQogICAgICAgIGNvbnNvbGUubG9nKHVwbG9hZEluZm8pDQogICAgICAgIHVwbG9hZGVyLnNldFVwbG9hZEF1dGhBbmRBZGRyZXNzKA0KICAgICAgICAgIHVwbG9hZEluZm8sDQogICAgICAgICAgdm9kVG9rZW4udXBsb2FkQXV0aCwNCiAgICAgICAgICB2b2RUb2tlbi51cGxvYWRBZGRyZXNzLA0KICAgICAgICAgIHZvZFRva2VuLnZpZGVvSWQNCiAgICAgICAgKQ0KICAgICAgfSwNCiAgICAgIC8vIOaWh+S7tuS4iuS8oOi/m+W6pu+8jOWNleS9je+8muWtl+iKgiwg5Y+v5Lul5Zyo6L+Z5Liq5Ye95pWw5Lit5ou/5Yiw5LiK5Lyg6L+b5bqm5bm25pi+56S65Zyo6aG16Z2i5LiKDQogICAgICBvblVwbG9hZFByb2dyZXNzOiAodXBsb2FkSW5mbywgdG90YWxTaXplLCBwcm9ncmVzcykgPT4gew0KICAgICAgICBsZXQgcGVyY2VudGFnZSA9IE1hdGguY2VpbChwcm9ncmVzcyAqIDEwMCkNCiAgICAgICAgY29uc29sZS5sb2coYOWqkui1hOS4iuS8oOWIsOmYv+mHjOS6kei/m+W6pi4uLiR7cGVyY2VudGFnZX0lYCkNCiAgICAgICAgY29uc29sZS5sb2codXBsb2FkSW5mbykNCg0KICAgICAgICAvLyDmm7TmlrDkuIrkvKDov5vluqYNCiAgICAgICAgbGV0IGN1cnJlbnRGaWxlID0gdGhpcy5maWxlTGlzdC5maW5kKA0KICAgICAgICAgIChpdGVtOiBFbFVwbG9hZEludGVybmFsRmlsZURldGFpbCkgPT4gew0KICAgICAgICAgICAgcmV0dXJuIHVwbG9hZEluZm8uZmlsZS51aWQgPT0gaXRlbS51aWQNCiAgICAgICAgICB9DQogICAgICAgICkNCiAgICAgICAgaWYgKGN1cnJlbnRGaWxlKSB7DQogICAgICAgICAgY3VycmVudEZpbGUucGVyY2VudGFnZSA9IHBlcmNlbnRhZ2UNCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIC8vIOaWh+S7tuS4iuS8oOWksei0pQ0KICAgICAgb25VcGxvYWRGYWlsZWQ6ICh1cGxvYWRJbmZvLCBjb2RlLCBtZXNzYWdlKSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKCflqpLotYTkuIrkvKDliLDpmL/ph4zkupHlpLHotKUuLi4nKQ0KICAgICAgICBjb25zb2xlLmxvZyh1cGxvYWRJbmZvKQ0KICAgICAgfSwNCiAgICAgIC8vIOaWh+S7tuS4iuS8oOaIkOWKnw0KICAgICAgb25VcGxvYWRTdWNjZWVkOiB1cGxvYWRJbmZvID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coJ+Wqkui1hOS4iuS8oOWIsOmYv+mHjOS6keWujOaIkC4uLicpDQogICAgICAgIGNvbnNvbGUubG9nKHVwbG9hZEluZm8pDQoNCiAgICAgICAgLy8g5L+d5a2Y5aqS6LWE5L+h5oGvDQogICAgICAgIHRoaXMuc2F2ZUFsaXl1bk1lZGlhKHVwbG9hZEluZm8uZmlsZS5uYW1lLCB2b2RUb2tlbikNCiAgICAgIH0NCiAgICB9KQ0KICAgIHJldHVybiB1cGxvYWRlcg0KICB9DQoNCiAgLyoqDQogICAqIOS/neWtmOS4g+eJm+S6keWqkui1hOS/oeaBrw0KICAgKi8NCiAgcHJpdmF0ZSBhc3luYyBzYXZlUWluaXV5dW5NZWRpYShmaWxlbmFtZTogc3RyaW5nLCBxblBhcmFtczogSVFuUGFyYW1zRFRPKSB7DQogICAgbGV0IGJvZHkgPSB7DQogICAgICBidWNrZXQ6IHFuUGFyYW1zLnNjb3BlLA0KICAgICAgZmlsZUlkOiBxblBhcmFtcy5rZXksDQogICAgICBmaWxlbmFtZTogZmlsZW5hbWUsDQogICAgICB0eXBlOiAnMDAxMDAzJywgLy8g5paH5qGjDQogICAgICB4Y19rZXk6IHFuUGFyYW1zLnhjX2tleQ0KICAgIH0NCiAgICBhd2FpdCBzYXZlTWVkaWEoYm9keSkNCiAgfQ0KDQogIC8qKg0KICAgKiDkv53lrZjpmL/ph4zkupHlqpLotYTkv6Hmga8NCiAgICovDQogIHByaXZhdGUgYXN5bmMgc2F2ZUFsaXl1bk1lZGlhKGZpbGVuYW1lOiBzdHJpbmcsIHZvZFRva2VuOiBJVm9kVG9rZW5EVE8pIHsNCiAgICBsZXQgYnVja2V0ID0gSlNPTi5wYXJzZShCYXNlNjQuZGVjb2RlKHZvZFRva2VuLnVwbG9hZEFkZHJlc3MpKS5CdWNrZXQNCiAgICBsZXQgYm9keSA9IHsNCiAgICAgIGJ1Y2tldDogYnVja2V0LA0KICAgICAgZmlsZUlkOiB2b2RUb2tlbi52aWRlb0lkLA0KICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLA0KICAgICAgdHlwZTogJzAwMTAwMicgLy8g6KeG6aKRDQogICAgfQ0KICAgIGF3YWl0IHNhdmVNZWRpYShib2R5KQ0KICB9DQoNCiAgLyoqDQogICAqIOWIoOmZpOaWh+S7tg0KICAgKiBUT0RPOiDosIPnlKjliKDpmaTmjqXlj6MNCiAgICovDQogIHByaXZhdGUgaGFuZGxlRGVsZXRlRmlsZSgpIHsNCiAgICB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXnp7vpmaTor6Xmlofku7YsIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6Jywgew0KICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLA0KICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsDQogICAgICB0eXBlOiAnd2FybmluZycNCiAgICB9KQ0KICAgICAgLnRoZW4oKCkgPT4gew0KICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsDQogICAgICAgICAgbWVzc2FnZTogJ+enu+mZpOaIkOWKnyEnDQogICAgICAgIH0pDQogICAgICB9KQ0KICAgICAgLmNhdGNoKCgpID0+IHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgdHlwZTogJ2luZm8nLA0KICAgICAgICAgIG1lc3NhZ2U6ICflt7Llj5bmtojnp7vpmaQnDQogICAgICAgIH0pDQogICAgICB9KQ0KICB9DQoNCiAgLyoqDQogICAqIOWFs+mXreWvueivneahhuWQjuWIt+aWsOWIl+ihqA0KICAgKi8NCiAgcHJpdmF0ZSBoYW5kbGVDbG9zZWREaWFsb2coKSB7DQogICAgdGhpcy4kZW1pdCgnY2xvc2VEaWFsb2cnKQ0KICB9DQp9DQo="},{"version":3,"sources":["media-add-dialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"media-add-dialog.vue","sourceRoot":"src/module-organization/pages/media-manage/components","sourcesContent":["<template>\r\n  <el-dialog title=\"上传文件\" :visible.sync=\"syncDialogVisible\" @closed=\"handleClosedDialog\">\r\n    <!-- 数据列表 -->\r\n    <el-table\r\n      class=\"dataList\"\r\n      :data=\"fileList\"\r\n      border\r\n      style=\"width: 100%\"\r\n      :header-cell-style=\"{ textAlign: 'center' }\"\r\n    >\r\n      <el-table-column prop=\"name\" label=\"文件名\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"size\" label=\"大小\" align=\"center\"></el-table-column>\r\n      <el-table-column label=\"状态\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-progress :percentage=\"scope.row.percentage\"></el-progress>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- <el-table-column label=\"操作\" align=\"center\">\r\n        <el-button type=\"text\" size=\"mini\" @click=\"handleDeleteFile\">移除</el-button>\r\n      </el-table-column>-->\r\n    </el-table>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-upload\r\n        action=\"#\"\r\n        :auto-upload=\"false\"\r\n        :accept=\"'video/*'\"\r\n        :show-file-list=\"false\"\r\n        :on-change=\"handleChange\"\r\n        :before-upload=\"handleBeforeUpload\"\r\n        :http-request=\"handleHttpRequest\"\r\n      >\r\n        <el-button>添加文件</el-button>\r\n        <!-- <el-button type=\"primary\" @click=\"dialogVisible = false\">上传</el-button> -->\r\n      </el-upload>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue, PropSync } from 'vue-property-decorator'\r\nimport {\r\n  ElUploadInternalRawFile,\r\n  ElUploadInternalFileDetail,\r\n  HttpRequestOptions\r\n} from 'element-ui/types/upload'\r\n\r\nimport * as qiniu from 'qiniu-js'\r\nimport { Base64 } from 'js-base64'\r\nimport { IQnParamsDTO, IVodTokenDTO } from '@/entity/media-page-list'\r\nimport { getQnParams } from '@/api/common'\r\nimport { getVodToken, saveMedia } from '@/api/media'\r\nimport {uploadByPieces} from '@/utils/uploadtools'\r\n\r\n@Component\r\nexport default class MediaAddDialog extends Vue {\r\n  @PropSync('dialogVisible', { type: Boolean, default: false })\r\n  syncDialogVisible!: boolean\r\n\r\n  // 文档后缀名列表\r\n  private msDocumentSuffix: string[] = [\r\n    '.doc',\r\n    '.docx',\r\n    '.xls',\r\n    '.xlsx',\r\n    '.ppt',\r\n    '.pptx',\r\n    '.pdf'\r\n  ]\r\n  // 音/视频后缀名列表\r\n  private audioVideoSuffix: string[] = ['.mp3', '.wma', '.avi', '.mp4']\r\n  // 上传的文件列表\r\n  private fileList: ElUploadInternalFileDetail[] = []\r\n\r\n  /**\r\n   * 生命周期钩子\r\n   */\r\n  created() {}\r\n\r\n  /**\r\n   * 文件状态改变时的钩子\r\n   */\r\n  // 文件分块上传 \r\n  private handleChange(\r\n    file: ElUploadInternalFileDetail,\r\n    fileList: ElUploadInternalFileDetail[]\r\n  ) {\r\n    this.fileList = fileList\r\n    uploadByPieces({\r\n      file,\r\n      pieceSize: 5, //分片大小\r\n      success: (data) => {\r\n        file.percentage = (data.num/data.chunkCount) * 100\r\n        console.log('success::' + data)\r\n      },\r\n      error: (e) => {\r\n        console.log(file, fileList)\r\n        // 出错了可以从列表中删除吧\r\n        // fileList.forEach((n,i) => { if(n.uid == file.uid){\r\n        //   fileList.splice(i,1)\r\n        // } })\r\n        console.log('error::' + '视频分片上传失败')\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 上传文件之前的钩子\r\n   */\r\n  private handleBeforeUpload(file: ElUploadInternalRawFile) {\r\n    let validSuffix = this.msDocumentSuffix.concat(this.audioVideoSuffix)\r\n    let filename = file.name\r\n    let index = filename.lastIndexOf('.')\r\n    let suffix = filename.substr(index)\r\n\r\n    const isValid = validSuffix.indexOf(suffix) !== -1\r\n    if (!isValid) {\r\n      this.$message.error(`上传媒资文件只能是 ${validSuffix.toString()} 格式！`)\r\n    }\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * 覆盖默认的上传行为\r\n   */\r\n  private handleHttpRequest(options: HttpRequestOptions) {\r\n    let file = options.file\r\n    let filename = file.name\r\n    let index = filename.lastIndexOf('.')\r\n    let suffix = filename.substr(index)\r\n\r\n    if (this.audioVideoSuffix.indexOf(suffix) !== -1) {\r\n      // 音/视频上传到阿里云\r\n      this.aliyunUpload(file)\r\n    } else {\r\n      // 文档上传到七牛云\r\n      this.qiniuyunUpload(file)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 文档上传到七牛云\r\n   * TODO: 异常系考虑 401\r\n   */\r\n  private async qiniuyunUpload(file: ElUploadInternalFileDetail) {\r\n    // 准备工作\r\n    let qnParams: IQnParamsDTO = await getQnParams()\r\n\r\n    // 开始上传\r\n    let token = qnParams.qnToken\r\n    let config = {\r\n      useCdnDomain: true,\r\n      region: null // 自动分析上传域名区域\r\n    }\r\n    let putExtra = {\r\n      fname: '',\r\n      params: {},\r\n      mimeType: null\r\n    }\r\n    let key = qnParams.key\r\n\r\n    let next = response => {\r\n      let total = response.total\r\n      let percentage = Math.ceil(total.percent)\r\n      console.log(`媒资上传到七牛云进度...${percentage}%`)\r\n      console.log(response)\r\n\r\n      // 更新上传进度\r\n      let currentFile = this.fileList.find(\r\n        (item: ElUploadInternalFileDetail) => {\r\n          return file.uid == item.uid\r\n        }\r\n      )\r\n      if (currentFile) {\r\n        currentFile.percentage = percentage\r\n      }\r\n    }\r\n    let error = response => {\r\n      console.log('媒资上传到七牛云失败...')\r\n      console.log(response)\r\n    }\r\n    let complete = response => {\r\n      console.log('媒资上传到七牛云完成...')\r\n      console.log(response)\r\n\r\n      // 保存媒资信息\r\n      this.saveQiniuyunMedia(file.name, qnParams)\r\n    }\r\n\r\n    let subscription\r\n    // 调用sdk上传接口获得相应的observable，控制上传和暂停\r\n    let observable = qiniu.upload(file, key, token, putExtra, config)\r\n    observable.subscribe(next, error, complete)\r\n    console.log('媒资上传到七牛云开始...')\r\n  }\r\n\r\n  /**\r\n   * 音/视频上传到阿里云\r\n   * TODO: 异常系考虑\r\n   */\r\n  private async aliyunUpload(file: ElUploadInternalFileDetail) {\r\n    let fileName = file.name\r\n    let index = fileName.lastIndexOf('.')\r\n    let title = fileName.substr(0, index)\r\n    let body = {\r\n      fileName: fileName,\r\n      title: title\r\n    }\r\n    let vodToken: IVodTokenDTO = await getVodToken(body)\r\n\r\n    let userData = '{\"Vod\":{}}'\r\n    let uploader = this.createUploader(vodToken)\r\n    uploader.addFile(file, null, null, null, userData)\r\n    // 然后调用 startUpload 方法, 开始上传\r\n    if (uploader !== null) {\r\n      uploader.startUpload()\r\n    }\r\n  }\r\n\r\n  private createUploader(vodToken: IVodTokenDTO) {\r\n    let uploader = new AliyunUpload.Vod({\r\n      userId: vodToken.userId,\r\n      // 开始上传\r\n      onUploadstarted: uploadInfo => {\r\n        console.log('媒资上传到阿里云开始...')\r\n        console.log(uploadInfo)\r\n        uploader.setUploadAuthAndAddress(\r\n          uploadInfo,\r\n          vodToken.uploadAuth,\r\n          vodToken.uploadAddress,\r\n          vodToken.videoId\r\n        )\r\n      },\r\n      // 文件上传进度，单位：字节, 可以在这个函数中拿到上传进度并显示在页面上\r\n      onUploadProgress: (uploadInfo, totalSize, progress) => {\r\n        let percentage = Math.ceil(progress * 100)\r\n        console.log(`媒资上传到阿里云进度...${percentage}%`)\r\n        console.log(uploadInfo)\r\n\r\n        // 更新上传进度\r\n        let currentFile = this.fileList.find(\r\n          (item: ElUploadInternalFileDetail) => {\r\n            return uploadInfo.file.uid == item.uid\r\n          }\r\n        )\r\n        if (currentFile) {\r\n          currentFile.percentage = percentage\r\n        }\r\n      },\r\n      // 文件上传失败\r\n      onUploadFailed: (uploadInfo, code, message) => {\r\n        console.log('媒资上传到阿里云失败...')\r\n        console.log(uploadInfo)\r\n      },\r\n      // 文件上传成功\r\n      onUploadSucceed: uploadInfo => {\r\n        console.log('媒资上传到阿里云完成...')\r\n        console.log(uploadInfo)\r\n\r\n        // 保存媒资信息\r\n        this.saveAliyunMedia(uploadInfo.file.name, vodToken)\r\n      }\r\n    })\r\n    return uploader\r\n  }\r\n\r\n  /**\r\n   * 保存七牛云媒资信息\r\n   */\r\n  private async saveQiniuyunMedia(filename: string, qnParams: IQnParamsDTO) {\r\n    let body = {\r\n      bucket: qnParams.scope,\r\n      fileId: qnParams.key,\r\n      filename: filename,\r\n      type: '001003', // 文档\r\n      xc_key: qnParams.xc_key\r\n    }\r\n    await saveMedia(body)\r\n  }\r\n\r\n  /**\r\n   * 保存阿里云媒资信息\r\n   */\r\n  private async saveAliyunMedia(filename: string, vodToken: IVodTokenDTO) {\r\n    let bucket = JSON.parse(Base64.decode(vodToken.uploadAddress)).Bucket\r\n    let body = {\r\n      bucket: bucket,\r\n      fileId: vodToken.videoId,\r\n      filename: filename,\r\n      type: '001002' // 视频\r\n    }\r\n    await saveMedia(body)\r\n  }\r\n\r\n  /**\r\n   * 删除文件\r\n   * TODO: 调用删除接口\r\n   */\r\n  private handleDeleteFile() {\r\n    this.$confirm('此操作将永久移除该文件, 是否继续?', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    })\r\n      .then(() => {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '移除成功!'\r\n        })\r\n      })\r\n      .catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消移除'\r\n        })\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 关闭对话框后刷新列表\r\n   */\r\n  private handleClosedDialog() {\r\n    this.$emit('closeDialog')\r\n  }\r\n}\r\n</script>\r\n"]}]}