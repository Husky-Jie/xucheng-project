{"remainingRequest":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\login\\components\\register-form.vue?vue&type=style&index=0&id=1227db81&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\src\\module-portal\\pages\\login\\components\\register-form.vue","mtime":1586849107735},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660903053592},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660903053930},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\postcss-loader\\src\\index.js","mtime":1576202027988},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1660903055666},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660903053464},{"path":"D:\\Java学习\\xucheng-project\\project-xczx2-portal-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":1660903053930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnZlcmlmeS1idXR0b24gew0KICB3aWR0aDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["register-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA;AACA;AACA","file":"register-form.vue","sourceRoot":"src/module-portal/pages/login/components","sourcesContent":["<template>\r\n  <div class=\"signItem\">\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" class=\"form\" label-position=\"top\">\r\n      <el-form-item label=\"手机号码：\" prop=\"phone\">\r\n        <el-input v-model=\"form.phone\" placeholder=\"请输入手机号\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"短信验证码：\" prop=\"verifyCode\">\r\n        <el-row :gutter=\"10\" justify=\"space-between\">\r\n          <el-col :span=\"15\">\r\n            <el-input v-model=\"form.verifyCode\" placeholder=\"请输入短信验证码\"></el-input>\r\n          </el-col>\r\n          <el-col :span=\"9\">\r\n            <el-button\r\n              type=\"primary\"\r\n              :disabled=\"isSending\"\r\n              class=\"verify-button\"\r\n              @click=\"smsMsg\"\r\n            >{{ buttonTips }}</el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n      <el-form-item label=\"设置密码：\" prop=\"password\">\r\n        <el-input v-model=\"form.password\" placeholder=\"6-16位密码，区分大小写\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码：\" prop=\"confirmPwd\">\r\n        <el-input v-model=\"form.confirmPwd\" placeholder=\"重复密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"signAgreement\">\r\n        <el-checkbox v-model=\"form.signAgreement\">同意协议并注册</el-checkbox>\r\n        <a href=\"/doc/学成网注册协议.docx\" download>《学成网注册协议》</a>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button :loading=\"loading\" type=\"primary\" style=\"width:100%;\" @click=\"handleRegister\">注册</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { Form as ElForm } from 'element-ui'\r\nimport { smsMsg } from '@/api/common'\r\nimport { register } from '@/api/learning-user'\r\n\r\nconst TIME_COUNT = 90\r\n@Component\r\nexport default class RegisterForm extends Vue {\r\n  private loading = false\r\n  // 验证码\r\n  private isSending: boolean = false\r\n  private sendTimer: number = 0\r\n  private sendCount: number = 0\r\n  // 表单数据\r\n  private form: any = {\r\n    phone: '',\r\n    verifyCode: '',\r\n    password: '',\r\n    confirmPwd: '',\r\n    verifyKey: '',\r\n    signAgreement: false\r\n  }\r\n  // 验证详情\r\n  // 手机号正则，参考：http://caibaojian.com/phone-regexp.html\r\n  private validatePhone = (rule: any, value: any, callback: any) => {\r\n    if (!/^1[0-9]{10}$/.test(value)) {\r\n      callback(new Error('请输入正确的手机号'))\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  // TODO: 密码其他校验\r\n  private validatePassword: any = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback(new Error('请输入密码'))\r\n    } else {\r\n      if (this.form.confirmPwd !== '') {\r\n        let form = this.$refs['form'] as ElForm\r\n        form.validateField('confirmPwd', () => {})\r\n      }\r\n      callback()\r\n    }\r\n  }\r\n  private validateConfirmPwd: any = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback(new Error('请再次输入密码'))\r\n    } else if (value !== this.form.password) {\r\n      callback(new Error('两次输入密码不一致!'))\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  private validateSignAgreement: any = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback(new Error('请阅读并同意协议'))\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n  // 表单验证\r\n  // TODO: 增加rules校验\r\n  private rules: any = {\r\n    phone: [\r\n      {\r\n        required: true,\r\n        message: '请输入手机号',\r\n        trigger: 'change'\r\n      },\r\n      { validator: this.validatePhone, trigger: 'change' }\r\n    ],\r\n    verifyCode: [\r\n      {\r\n        required: true,\r\n        message: '请输入短信验证码',\r\n        trigger: 'change'\r\n      }\r\n    ],\r\n    password: [{ validator: this.validatePassword, trigger: 'change' }],\r\n    confirmPwd: [{ validator: this.validateConfirmPwd, trigger: 'change' }],\r\n    signAgreement: [\r\n      { validator: this.validateSignAgreement, trigger: 'change' }\r\n    ]\r\n  }\r\n\r\n  // computed\r\n  get buttonTips() {\r\n    if (!this.isSending) {\r\n      return '获取验证码'\r\n    }\r\n    return `${this.sendCount}s`\r\n  }\r\n\r\n  /**\r\n   * 发送短信验证码\r\n   */\r\n  private async smsMsg() {\r\n    let form = this.$refs['form'] as ElForm\r\n    form.validateField('phone', async (errorMessage: string) => {\r\n      if (errorMessage) {\r\n        return\r\n      }\r\n      this.isSending = true\r\n      this.sendCount = TIME_COUNT\r\n      this.form.verifyKey = await smsMsg(this.form.phone)\r\n\r\n      this.sendTimer = setInterval(() => {\r\n        if (this.sendCount > 0) {\r\n          this.sendCount--\r\n        } else {\r\n          clearInterval(this.sendTimer)\r\n          this.isSending = false\r\n        }\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 用户注册\r\n   */\r\n  public async handleRegister() {\r\n    let form: ElForm = this.$refs['form'] as ElForm\r\n    form.validate(async (isValid: boolean) => {\r\n      if (isValid) {\r\n        this.loading = true\r\n        await register(this.form)\r\n\r\n        this.$emit('changeState', false)\r\n        this.loading = false\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.verify-button {\r\n  width: 100%;\r\n}\r\n</style>"]}]}